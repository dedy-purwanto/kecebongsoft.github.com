<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dedi P.</title><link href="http://kecebongsoft.com/" rel="alternate"></link><link href="http://kecebongsoft.com/feeds/posts.atom.xml" rel="self"></link><id>http://kecebongsoft.com/</id><updated>2014-06-08T00:00:00+08:00</updated><entry><title>Programmer dan mengetik</title><link href="http://kecebongsoft.com/2014/06/programmer-dan-mengetik.html" rel="alternate"></link><updated>2014-06-08T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-06-08:2014/06/programmer-dan-mengetik.html</id><summary type="html">&lt;p&gt;Perjalanan saya berlatih mengetik cepat dimulai ketika saya belajar pemrograman secara otodidak, pada saat itu, saya seringkali membeli majalah pemrograman yang memuat artikel tentang pembuatan sebuah software, yang mana pada kala itu, source code di lampirkan langsung di majalah tersebut, sehingga saya harus menyalin kodenya baris demi baris. Perlahan tapi pasti, saya mulai mengingat posisi tombol-tombol keyboard dan setelah beberapa bulan, saya mulai fasih mengetik tanpa melihat keyboard.&lt;/p&gt;
&lt;p&gt;Pada saat itu, saya sudah memposisikan diri saya sebagai 'touch-typist', atau seseorang yang bisa mengetik tanpa melihat keyboard. Namun teknik mengetik saya masih jauh dari kata 'benar', saya tidak pernah mengikuti pendidikan formal mengetik dan cara mengetik saya cenderung acak, saya bahkan tidak menggunakan beberapa jari seperti kelingking dan jempol. &lt;/p&gt;
&lt;p&gt;Ketika saya mulai lebih sering mengetik kode, terutama saat saya mulai bekerja, barulah saya merasakan bahwa kemampuan mengetik saya meskipun cepat, masih terasa 'gagap', setiap kali mengetik, saya masih harus berfikir tentang posisi-posisi tombol di keyboard serta menyesuaikannya dengan posisi jari saya yang acak dalam menekan tombol. Disaat menulis kode, saya merasa cara saya menterjemahkan apa yang ada di fikiran menjadi baris-baris kode terhambat oleh cara mengetik saya yang tidak benar ini.&lt;/p&gt;
&lt;p&gt;Pada saat itulah saya mulai berniat untuk belajar mengetik dengan benar, untuk mendukung rencana ini, saya membeli sebuah keyboard yang desainnya dibagi antara lengan kanan dan kiri, yaitu Microsoft Natural Ergonomic 4000, keyboard ini memaksa kita untuk mengetik dengan benar dengan cara membagi set huruf menjadi 2 bagian, sehingga huruf-hurufnya harus ditekan oleh tangan dan jari yang benar.&lt;/p&gt;
&lt;p&gt;Setelah beberapa bulan 'memaksa' diri saya untuk terbiasa dengan layout keyboard tersebut, akhirnya saya bisa fasih mengetik 10 jari dan sangat merasakan manfaatnya, mengetik bukan lagi menjadi hambatan bagi pikiran saya untuk menulis seperti dulu. Mengetik sudah terasa seperti menulis tangan, dimana keyboard sudah terasa seperti ekstensi dari tangan saya, tidak ada lagi 'thought process' dimana saya harus membayangkan posisi jari dan tombl keyboard seperti dulu. Ketiak menulis kode, saya bisa terfokus pada apa yang ingin saya tulis ketimbang bagaimana cara saya menulisnya (membayangkan posisi keyboard).&lt;/p&gt;
&lt;p&gt;Setelah fasih mengetik 10 jari dengan cara yang benar, barulah saya mengakui benar manfaatnya, dulunya, saya sering mencemooh orang yang mengikuti kursus mengetik 10 jari, menganggap bahwa asalkan kita bisa mengetik tanpa melihat, tidak perduli benar atau tidak, maka sudah cukup.&lt;/p&gt;
&lt;p&gt;Saat ini, saya masih sering melihat teman serta rekan kerja saya, terutamanya sesama programmer, yang masih harus 'berfikir' sejenak ketika mengetik, mencari-cari dan menyesuaikan posisi keyboard dengan jari mereka, sehingga memperlambat kerja serta kemungkinan menghilangkan fokus mereka terhadap apa yang mereka kerjakan. Apa yang mereka fikirkan dan ingin dituliskan di kode, terhambat oleh 'thought process' dalam mengetik. Ini seharusnya bisa dieliminasi dengan kemampuan mengetik yang benar. Mengetik seharusnya sudah seperti berbicara, fasih dan tanpa keraguan.&lt;/p&gt;
&lt;p&gt;Pada akhirnya saya berprinsip bahwa seorang programmer sudah wajib untuk menguasai kemampuan mengetik 10 jari yang benar, secara langsung atau tidak, alam bawah sadar kita 'terganggu' fokusnya dalam bekerja ketika kemampuan mengetik menghambat proses penyampaian ide di fikiran menjadi kata-kata.&lt;/p&gt;</summary></entry><entry><title>Jupiter</title><link href="http://kecebongsoft.com/2014/04/jupiter.html" rel="alternate"></link><updated>2014-04-14T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-04-14:2014/04/jupiter.html</id><summary type="html">&lt;h2&gt;&lt;em&gt;Saya sering memandang ke langit dan membayangkan jika asteroid sebesar gunung Kilimanjaro jatuh ke Bumi saat ini, teknologi apa yang kita miliki sekarang, yang dapat mencegah kehancuran masal tersebut?&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Seperti yang kita ketahui, Bumi sudah seringkali dijatuhi meteor. Bumi sendiri terbentuk dari hasil &lt;em&gt;karambol&lt;/em&gt; luar angkasa; Jutaan meteor, beradu satu dengan yang lain selama milyaran tahun, di &lt;em&gt;tarik ulur&lt;/em&gt; oleh gravitasi hingga terbentuk planet yang kita kenal dengan nama Bumi. Meteor, adalah awal dari kehidupan di Bumi.&lt;/p&gt;
&lt;p&gt;Di saat yang sama, meteor juga pembawa bencana bagi kehidupan. Jutaan tahun yang lalu, meteor &lt;em&gt;mampir&lt;/em&gt; di padang Meksiko, dengan keuatan lebih dari satu trilyun bom yang menghancurkan Hiroshima pada tahun 1945. Meteor tersebut memusnahkan 70-persen kehidupan di Bumi. Mungkin sudah sering kali meteor jatuh dan membawa kematian bagi kehidupan di Bumi jutaan tahun yang lalu, siapa yang tahu.&lt;/p&gt;
&lt;p&gt;Saya terkadang membayangkan bagaimana jika meteor yang cukup besar jatuh ke Bumi sekarang, apa kita punya cukup cara untuk mencegah tamu tak diundang tersebut? atau kita akan punya nasib yang sama seperti nenek moyang kita jutaan tahu yang lalu, dilenyapkan oleh meteor?&lt;/p&gt;
&lt;p&gt;Hari ini ketika menonton Discovery Channel, saya menemukan bahwa ternyata Bumi punya &lt;em&gt;bodyguard&lt;/em&gt;. Pelindung ini men-tamengi Bumi dari bencana yang memusnahkan nenek moyang kita jutaan tahun lalu. Namanya adalah Jupiter.&lt;/p&gt;
&lt;p&gt;Jupiter, sebuah monster. Sebagai planet terbesar di tata surya kita, Jupiter memiliki gravitasi yang luar biasa kuat, sangat kuat, menghipnotis objek-objek disekitarnya untuk mendekat, termasuk asteroid. Yang lebih luar biasa lagi, Jupiter ternyata meng-orbit pada posisi yang sangat tepat untuk melindungi Bumi dari asteroid. &lt;/p&gt;
&lt;p&gt;Beberapa waktu yang lalu, asteroid yang cukup besar menghantam Jupiter, asteroid yang dipercaya kemungkinan akan menabrak Bumi, jika tidak ada Jupiter. Asteroid tersebut adalah salah satu yang terbesar yang pernah direkam. Katakan asteroid tersebut jatuh sebagai meteor ke Bumi, mungkin manusia akan musnah.&lt;/p&gt;
&lt;p&gt;Ini adalah salah satu masa dimana pikiran saya lagi-lagi terbuka oleh keajaiban alam semesta. Selama ini saya sering berpikir planet-planet lain yang mengintari Matahari kita punya relasi yang banyak dengan Bumi, namun saya keliru. Jupiter, sabagai raksasa, ternyata adalah salah satu pelindung kehidupan di Bumi dari kehancuran. Terima kasih, Jupiter.&lt;/p&gt;</summary></entry><entry><title>Penjelas Hebat</title><link href="http://kecebongsoft.com/2014/04/penjelas-hebat.html" rel="alternate"></link><updated>2014-04-12T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-04-12:2014/04/penjelas-hebat.html</id><summary type="html">&lt;h2&gt;&lt;em&gt;Seringkali ketika mencoba menjelaskan hal-hal kompleks kepada teman atau kolega, saya mendapati diskusi kami berakhir dengan kebingungan, apa selama ini ada yang salah dengan cara saya berkomunikasi?&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Saya adalah penggemar berat astronomi dan fisika. Semenjak sekolah dasar saya seringkali larut dalam mata pelajaran fisika dan astronomi, yang waktu itu disebut dengan Ilmu Pengetahuan Alam (IPA). Tanpa sadar saya punya ketertarikan lebih ketika belajar tentang tata-surya, hukum fisika, gravitasi, dan hal-hal sejenisnya; semuanya terdengar seperti dongeng yang nyata.&lt;/p&gt;
&lt;p&gt;Ketika melanjutkan ke pendidikan yang lebih tinggi — SD dan SMA —, saya mulai mempelajari materi fisika dan astronomi yang lebih kompleks, yang seringkali tidak bisa di-representasikan dengan media visual. Terkadang saya menyerah ketika membaca artikel tertentu karena keterbatasan saya dalam mencerna hal-hal kompleks. Di saat-saat seperti itulah saya seringkali berpindah menonton para ilmuan yang bisa menjelaskan dengan bahasa yang sangat mudah serta menarik bagi orang awam, salah satu ilmuan tersebut adalah &lt;a href="http://en.wikipedia.org/wiki/Michio_Kaku"&gt;Michio Kaku&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Michio Kaku, adalah seorang ilmuan dari Jepang yang saat ini mengajar di salah satu universitas di Amerika Serikat. Beliau memulai "karir"nya sebagai ilmuan pada saat membuat &lt;a href="http://en.wikipedia.org/wiki/Particle_accelerator"&gt;particle accelerator&lt;/a&gt; ketika masih SMA. Saat ini, beliau adalah salah satu dari sekian ilmuan yang bekerja memecahkan satu dari sekian misteri alam semesta: &lt;a href="http://en.wikipedia.org/wiki/String_theory"&gt;string theory&lt;/a&gt;. Di waktu yang sama, beliau juga mengajar serta mengisi acara-acara bertema sains.&lt;/p&gt;
&lt;p&gt;Michio Kaku adalah seorang ilmuan yang juga penggemar berat cerita fiksi-ilmiah, seperti Star Trek, Star Wars, dan sejenisnya. Seringkali ketika mengisi acara, beliau mencoba membawa tema fiksi-ilmiah digabungkan dengan cara pandang orang awam, serta dibawakan dengan bahasa yang simpel, singkat dan padat.&lt;/p&gt;
&lt;p&gt;Ketika saya menonton video-video beliau, seringkali saya terperanjat dengan konsep yang selama ini susah dimengerti, yang beliau jelaskan dengan sangat simpel disertai contoh yang mudah dimengerti.&lt;/p&gt;
&lt;p&gt;Seringkali saya bercermin, sebagai orang yang bekerja di bidang IT, mungkin tidak sedikit kolega dan teman saya yang ada diposisi sama seperti saya ketika membaca artikel fisika yang kompleks: bingung, susah mengerti, dan menyerah. Seringkali saya ada diposisi dimana saya harus menjelaskan hal-hal teknikal kepada orang awam dan diskusi kami berakhir pada kebingungan dan kesalah-pahaman.&lt;/p&gt;
&lt;p&gt;Terkadang saya bertanya, apakah saya bisa seperti seorang Michio Kaku?. Tidak hanya beliau mendapatkan pertanyaan-pertanyaan yang sulit, namun juga bisa dibalas dengan jawaban yang sangat mudah dimengerti. Mulai saat itu, saya mencoba memperbaiki diri melalui cara saya menyampaikan apa yang ada di pikiran saya, terutama hal-hal yang sulit untuk dimengerti orang lain.&lt;/p&gt;
&lt;p&gt;Michio Kaku tentu tidak menggunakan ilmu sihir yang menyulap pendengarnya untuk langsung mengerti. Saya menyadari pastilah ada teknik-teknik tertentu yang dipakai orang-orang seperti beliau dalam berkomunikasi yang efektif. Saya mulai memperhatikan cara beliau berkomunikasi dan sejauh ini yang dapat saya pelajari:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Jeda di setiap kalimat / jawaban&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Seringkali saya menjawab setiap pertanyaan secara instan, atau berbicara dengan cepat, tanpa berfikir panjang tentang apa yang sebenarnya si lawan bicara coba sampaikan, atau apa yang saya sendiri coba sampaikan; hingga akhirnya saya memilih kata-kata yang membuat interpretasi menjadi salah.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pengulangan kata&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Terkadang saya menggunakan kata-kata yang sama berulang kali sehingga menambah "polusi" didalam setiap kalimat, dan "polusi" ini membuat inti yang ingin saya sampaikan menjadi buram.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kata-kata yang kurang perlu&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tanpa saya sadari, saya seringkali menggunakan kata-kata tambahan yang tidak perlu dalam setiap kalimat, ini juga salah satu bentuk "polusi" yang mengaburkan maksud yang ingin saya sampaikan. Pola seperti "agar supaya" atau "tanpa saya sadari" yang sebenarnya bisa disingkat menjadi "tanpa disadari".&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tidak ada intonasi dan penekanan&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Terkadang ketika berbicara dengan cepat, saya gagal menyampaikan bagian mana dari kalimat saya yang paling penting. Saya berbicara dengan nada datar dan setiap kata terdengar sama pentingnya (atau tidak penting sama sekali).&lt;/p&gt;
&lt;p&gt;Banyak sekali hal yang saya bisa pelajari dari orang-orang seperti Michio Kaku dan yang lainnya, semoga setiap kali saya mempelajari sesuatu, saya bisa mengambil tidak hanya ilmu yang ingin saya pelajari, tapi juga hal-hal positif disekitarnya.&lt;/p&gt;</summary></entry><entry><title>Ponsel Pintar</title><link href="http://kecebongsoft.com/2014/04/ponsel-pintar.html" rel="alternate"></link><updated>2014-04-07T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-04-07:2014/04/ponsel-pintar.html</id><summary type="html">&lt;h2&gt;&lt;em&gt;Lalu lintas di jalan raya sudah menyepi, waktu menunjukan pukul 3 pagi. Belasan halaman web tentang smartphone yang gagal charge  masih terbuka di laptop sembari saya sesekali mengutak-atik smartphone saya yang sudah mati berhari-hari. Saya mulai sering bertanya apakah saya benar-benar butuh smartphone?&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;3 tahun lalu dibulan Agustus, saya mendapatkan smartphone pertama saya setelah berbulan-bulan (&lt;em&gt;atau tahun?&lt;/em&gt;) menabung dan membaca berbagai artikel tentang perangkat "pintar" ini. 3 tahun lalu adalah salah satu awal dari era ke-emasan gadget pintar, saat itu saya tidak perlu berfikir 2-kali untuk mengambil keputusan bahwa saya benar-benar membutuhkan smartphone. Saya sempat &lt;a href="/2008/05/sony-ericsson-xperia-x1-saingan-iphone.html"&gt;membanding-bandingkan beberapa ponsel&lt;/a&gt;, serta mengikuti &lt;a href="/2008/11/se-xperia-htc-touch-hd-atau-htc-touch-pro.html"&gt;kabar terbaru ponsel incaran saya&lt;/a&gt; pada waktu itu.&lt;/p&gt;
&lt;p&gt;Tidak ada target khusus tentang kapan saat itu saya harus memiliki smartphone, namun beberapa minggu sebelum akhirnya membeli, saya kehilangan ponsel saya di kereta karena kelalaian sendiri; dan petualangan menggunakan smartphone akhirnya dimulai.&lt;/p&gt;
&lt;p&gt;Smartphone pertama saya adalah Samsung Galaxy S2, yang diluncurkan di Malaysia pada bulan Agustus 2011. Ponsel ini adalah salah satu yang paling dielu-elukan banyak media, yang penjualannya diprediksi akan menyaingin — atau bahkan mengalahkan — iPhone. Saya pribadi memutuskan memilih S2 karena bisa di ubah-ubah sesuai keinginan, mengikutin &lt;em&gt;nature&lt;/em&gt;-nya yang open-source.&lt;/p&gt;
&lt;p&gt;Beberapa minggu pertama saya menggunakan smartphone adalah masa-masa yang paling adiktif; saya menginstall berbagai macam software dan game, melakukan modifikasi dan sebagainya. Setiap ada waktu luang, mata saya selalu tertuju pada smartphone. Seiring berjalannya waktu — meskipun tidak signifikan — saya mulai mengurangi penggunaan smartphone.&lt;/p&gt;
&lt;p&gt;Selama lebih dari setengah tahun, saya harus menggunakan kereta untuk pergi ke kantor. Semasa itulah smartphone serasa berguna untuk mengisi kekosongan waktu; mulai dari membaca artikel, membalas email hingga bermain game, semua saya lakukan untuk mengusir kebosanan. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fast-forward&lt;/em&gt; ke beberapa tahun kemudian, tepatnya setelah setahun menggunakan smartphone, saya mulai merasa penggunaan saya terhadap smartphone cenderung tidak produktif dan kurang membawa manfaat. Saya lebih sering aktif di media sosial serta bermain game, sedikit sekali — bahkan hampir tidak ada — waktu saya di gadget yang saya gunakan untuk keperluan yang bermanfaat, terkecuali mengecek email.&lt;/p&gt;
&lt;p&gt;Masa-masa selanjutnya mulai mengubah pemikirkan saya tentang gadget, seringkali saya melihat orang-orang menghabiskan waktu mereka bersama dengan bermain gadget masing-masing, hal yang dulunya saya anggap keren, namun mulai saya anggap jauh dari baik. Saya mulai lebih suka untuk melihat sekitar, berfikir tentang ide-ide, hal-hal kecil yang sering terlewatkan serta mengapresiasi lingkungan sekitar ketimbang sibuk dengan smartphone.&lt;/p&gt;
&lt;p&gt;Beberapa hari yang lalu, smartphone saya memutuskan untuk rusak, tidak bisa di-charge dan sudah berkali-kali diganti baterai. Beberapa hari tanpa smartphone ternyata tidak membuat saya susah, saya semakin menyadari bahwa saya memang tidak butuh smartphone, saya mulai menyadari gemerlap dunia gadget adalah sebuah delusi yang memancing naluri konsumerisme.&lt;/p&gt;
&lt;p&gt;Kini saya sudah tidak tertarik dengan smartphone, kalaupun harus punya, akan saya batasi ke fitur yang memang dibutuhkan untuk pekerjaan saya seperti email dan web-browser. Waktu yang dulu saya habiskan dengan menatap smartphone, kini mulai saya ganti dengan hal-hal yang lebih bermanfaat, seperti kembali aktif menulis serta hal-hal menarik lainnya. Semoga saja ini bisa berlanjut hingga bertahun-tahun. &lt;/p&gt;</summary></entry><entry><title>Takut Email</title><link href="http://kecebongsoft.com/2014/03/email.html" rel="alternate"></link><updated>2014-03-13T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-03-13:2014/03/email.html</id><summary type="html">&lt;h2&gt;&lt;em&gt;Sebagai medium komunikasi yang berumur lebih dari 3 dekade, email masih menjadi benda yang asing bagi kebanyakan orang — terutama para remaja. Gelombang media sosial dan instant messaging ikut membuat keberadaan email semakin terbenam. Apa kini email sudah bukan jamannya lagi? apakah keberadaan email hanya sebatas untuk mereka para senior saja?&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Hari ini saya dapat pesan tentang pengenalan email untuk kalangan remaja. Meski antusias, saya tidak bisa berhenti bertanya: &lt;em&gt;Seberapa lama mereka bisa tahan menggunakan email?&lt;/em&gt;. Pertanyaan ini tidak lepas dari pengalaman pribadi dulu, saya bukanlah pengguna aktif email ketika SMA, bahkan kuliah. Butuh bertahun-tahun bagi saya untuk akhirnya benar-benar aktif memanfaatkan email.&lt;/p&gt;
&lt;p&gt;Di era media sosial seperti sekarang, kita lebih memilih media sosial seperti Facebook dan Twitter sebagai media komunikasi, dengan alasan responnya yang lebih cepat, serta fitur yang kompetitif. Kita bisa terhubung lebih mudah dengan kenalan serta orang-orang baru melalui media sosial. Dalam hal ini tidak ada alasan untuk menggunakan email; media sosial sudah lebih dari cukup.&lt;/p&gt;
&lt;p&gt;Inilah kenapa saya terkadang skeptis mencari relevansi antara email dan remaja. Susah sekali mencari hal yang membuat email menjadi komunikas yang lebih efektif dibanding media sosial bagi para remaja; di pekerjaan saya pun sering mendengar keluhan rekan kerja, yang sulit menghubungi pelajar SMA melalui email (saya bekerja di bidang portal edukasi).&lt;/p&gt;
&lt;h2&gt;Kenapa saya perlu email?&lt;/h2&gt;
&lt;p&gt;Ketika mencoba melihat dari perspektif remaja, memang wajar kalau email menjadi medium yang tidak menarik. Ingin berkorespondensi? Ada Facebook dan Twitter. Mengerjakan tugas sekolah? Ada Google, forum, dan yang terakhir ini ada QA platform seperti &lt;a href="http://stackexchange.com"&gt;StackExchange&lt;/a&gt;. Hampir semua kebutuhan informasi mereka bisa di akomodir tanpa menggunakan email.&lt;/p&gt;
&lt;p&gt;Pada saat mereka — secara inisiatif atau &lt;em&gt;dipaksa&lt;/em&gt; — menggunakan email, otomatis email akan menjadi benda yang lambat laun akan dibuang. Komunikasi via email hanya akan dilakukan ketika: si penerima tidak ada di medial sosial, atau &lt;em&gt;dipaksa&lt;/em&gt; untuk berkorespondensi via email oleh guru/dosen.&lt;/p&gt;
&lt;p&gt;Beberapa tahun lalu, sebagai anak kuliah, saya terjatuh di alasan pertama: Saya mulai kesulitan berkomunikasi dengan berbagai pihak melalui media sosial. Ada dosen, ada mantan guru SMA, ada researcher dari universitas lain, yang memiliki medium komunikasi berbeda tapi punya satu kesamaan: menggunakan email. Akhirnya saya mulai mencoba lagi untuk aktif menggunakan email. Disinilah saya merasa email menjadi lebih superior: Cocok untuk komunikasi dengan siapapun, dari manapun, dalam hal apapun.&lt;/p&gt;
&lt;p&gt;Email menjadi kompetitif ketika kita berkomunikasi dengan berbagai macam pihak. Mulai dari mereka yang ada di media sosial, yang tidak ada, ataupun yang hanya ingin media sosial mereka dipakai untuk keperluan pribadi.&lt;/p&gt;
&lt;p&gt;Menurut saya inilah masalah utama penggunaan email di kalangan remaja. Ada perbedaan tipe komunikasi antara remaja dan proffesional. Sehingga membuat email dalam perspektif mereka menjadi tidak efisien. Pada akhirnya, siapa yang mau di-email? semua teman sudah ada di Facebook dan Twitter.&lt;/p&gt;
&lt;p&gt;Apakah ini sebuah implikasi bahwa sekarang memang bukan jamannya email? Entahlah, masih terlalu dini karena email masih jadi medium vital bagi sebagian besar lainnya. Yang jelas, sosialisasi email di kalangan remaja tidak bisa hanya dilakukan secara &lt;em&gt;berjamaah&lt;/em&gt;: mendaftarkan akun mereka dan membiarkan mereka berjalan sendiri.&lt;/p&gt;
&lt;h2&gt;"Sosialisasi email"&lt;/h2&gt;
&lt;p&gt;Jika harus dilakukan — menurut saya — sosialisasi email haruslah dijalankan secara progresif; perlahan tapi pasti. Aspek terpenting yang membuat media sosial menjadi lebih kompetitif adalah karena si pengguna sudah punya kenalan disana. Itu juga alasan kenapa Facebook masih berjaya dibanding Google+: Karena teman kita ada di Facebook dan tidak di Google+.&lt;/p&gt;
&lt;p&gt;Harus ada stimulan agar pengguna baru tetap aktif berkorespondensi melalui email, stimulan ini berbentuk komunikasi dua arah. Kita bisa memperkenalkan email melalui model mailing-list, atau membuat korespondensi secara grup. Intinya jangan memperkenalankan email dan membiarkan si pengguna berjalan sendiri, berharap mereka akan mendapatkan seseorang yang akan jadi teman ber-email. &lt;/p&gt;
&lt;p&gt;Pada akhirnya, email dan media sosial punya tempat tersendiri, tapi tidak dipungkiri bahwa media sosial berhasil mencuri hati banyak orang, sementara email — yang lebih tua — masih dipandang asing bagi sebagian besar masyarakat. Memperkenalkan email ke khalayak awam tidaklah seperti memperkenalkan media sosial, yang pada umumnya kita &lt;em&gt;disuapi konten&lt;/em&gt;. Haruslah ada kesabaran, serta ketekunan.&lt;/p&gt;</summary></entry><entry><title>Pendidikan Modern</title><link href="http://kecebongsoft.com/2014/03/pendidikan-modern.html" rel="alternate"></link><updated>2014-03-11T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-03-11:2014/03/pendidikan-modern.html</id><summary type="html">&lt;p&gt;Malam ini ketika saya sedang bersantai dan lurking di facebook, saya menemukan tautan essay dari seorang dosen di Universitas Pancasila Indonesia, yang menulis bahwa mahasiswanya menggunakan cara belajar yang sama seperti 17 tahun lalu, sangat outdated dan tidak efektif. Beliau kemudian mengemukakan tools dan metodologi yang lebih modern seperti penggunaan &lt;a href="http://en.wikipedia.org/wiki/Revision_control"&gt;VCS&lt;/a&gt; dan social media sebagai bahan belajar. Saya setuju dengan sebagian besar poin yang beliau kemukakan, namun saya terperangkap dengan kata-kata &lt;em&gt;stagnan selama 17 tahun&lt;/em&gt;, penggunaan teknologi serta relevansi dan impactnya terhadap sistem pendidikan modern.&lt;/p&gt;
&lt;p&gt;Awalnya saya hanya ingin membuat komentar singkat, namun karena ada beberapa poin dipikiran saya yang (seperti biasa) berkembang menjadi kalimat lalu paragraf, saya memutuskan untuk menulis artikel singkat mengenai ini. &lt;a href="http://software.endy.muhardin.com/life/menjadi-mahasiswa-hi-tech/"&gt;Berikut adalah ucapan beliau&lt;/a&gt; yang membuat saya tertarik untuk membuat tulisan ini:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dari sekian banyak mahasiswa, tidak ada satupun yang mengikuti perkuliahan sesuai dengan kondisi jaman sekarang. Semuanya, tanpa terkecuali, masih kuliah seperti halnya saya kuliah di tahun 1997 dulu. Ya benar, selama 17 tahun tidak ada perubahan metodologi sama sekali.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Saya mengerti dari tulisan beliau, fokus utamanya adalah dari sisi mahasiswa/individual: yang seharusnya di jaman sekarang menggunakan tools dan metodologi yang lebih modern, mengurangi aktifitas online/offline yang tidak positif, serta proaktif dalam belajar (tidak hanya dikelas). Namun ketika berbicara sistem pendidikan yang tidak berubah selama belasan tahun, pemanfaatan teknologi modern sebagai &lt;em&gt;complementary tools&lt;/em&gt; tidak akan banyak mengubah keadaan. Jadi ditulisan ini saya ingin berbicara tentang konsep pendidikan modern yang ada dibenak saya, yang lebih penting dan besar dampaknya.&lt;/p&gt;
&lt;p&gt;Sebelum itu, menurut saya tools dan metodologi yang beliau kemukakan adalah jenis usaha untuk membuat kegiatan belajar menjadi lebih efektif. Contohnya di kampus saya dulu, dosen akan meng-upload material satu semester penuh ke portal mahasiswa, yang bisa didownload dan dipelajari secara proaktif sebelum masuk ke kelas. Dosen saya jarang sekali menulis material yang jauh berbeda dipapan tulis dengan yang sudah mereka upload. Ini juga salah satu usaha membuat sistem belajar menjadi efektif, sama seperti anjuran beliau untuk memanfaatkan VCS dan media sosial.&lt;/p&gt;
&lt;p&gt;Permasalahannya adalah: Seorang pengajar, duduk dikelas selama satu jam bersama puluhan murid, berusaha mengajarkan sesuatu kepada para murid yang memiliki:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basis pengetahuan berbeda.&lt;/li&gt;
&lt;li&gt;Kecepatan pemahaman berbeda.&lt;/li&gt;
&lt;li&gt;Cara menterjemahkan materi yang berbeda.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bayangkan mengajarkan kelas awal pemrograman, dimana ada murid yang baru pegang komputer satu bulan lalu, sudah pegang komputer 3 tahun lalu, belum tau apa itu program, dsb (basis pengetahuan berbeda). Setelah kelas berakhir dan dilanjutkan ke hari berikutnya ke topik yang lebih tinggi, berapa banyak yang sudah mengerti materi kemarin? (kecepatan pemahaman berbeda). Dan dari yang mengerti, berapa banyak yang sepaham dengan apa yang guru fikirkan? (cara menterjemahkan materi yang berbeda). Ini berlanjut selama bertahun-tahun hingga kalendar perkuliahan berakhir. Tentu saja sebagai mahasiswa diharapkan untuk belajar secara proaktif diluar jam kelas, tapi seberapa banyak yang bisa seperti ini? Terlepas dari alasannya (kerja sampingan, malas, ada tanggung jawab lain, dsb).&lt;/p&gt;
&lt;p&gt;Diatas semua itu, tambahkan kurikulum dan matakuliah yang sudah di preset selama satu semester, yang mengasumsikan kita akan bisa belajar B setelah belajar A. Menarik semasa kuliah dulu banyak teman saya yang mengaku bisa jaringan setelah belajar pemrograman, tapi pemrograman diajarkan setelah jaringan.&lt;/p&gt;
&lt;p&gt;Sejauh ini apa yang ingin saya kemukakan adalah secara langsung/tidak langsung, sistem belajar-mengajar konvensional yang diterapkan oleh institutsi pendidikan membuat mahasiswa menjadi pasif dikelas dan cenderung "disuapi", oleh materi yang awalnya ditargetkan agar mahasiswa menguasai hal-hal tertentu, namun gagal karena cara penyampaiannya yang tidak sesuai dengan cara mencerna tiap individu. Sebagai contoh, bahasa pemrograman apa yang cocok untuk mata kuliah logika dasar? Python atau C++? Kita naikan lagi, pemrograman berbasis teks atau &lt;a href="/2012/08/pemrograman-visual.html"&gt;pemrograman visual&lt;/a&gt;? Lalu apa yang selama ini diajarkan diperkuliahan untuk mencapai objektif tersebut? efektifkah?.&lt;/p&gt;
&lt;p&gt;Teknologi dan layanan yang dikemukakan oleh beliau adalah asupan yang menurut saya, harus dipelajari oleh para mahasiswa. Saya sangat setuju kalau mahasiswa IT harus punya akun Github, bukan cuma mahasiswa, siswa SMP/SMA, karyawan, siapapun yang berminat di computer science dan software development harus belajar tools yang membawa produktifitas seperti git dan VCS lainnya. Tapi dari sisi belajar-mengajar saya melihat itu cuma sebagai &lt;em&gt;complementary&lt;/em&gt; ketimbang solusi. Apakah si A akan menulis kode yang lebih bagus karena di-push ke GitHub ketimbang si B yang hanya di zip? belum tentu. Memang betul dengan &lt;em&gt;mendandani&lt;/em&gt; kode kita melalui git dan github, &lt;em&gt;presummably&lt;/em&gt; karya kita lebih bagus ketimbang yang tidak, tapi kembali lagi seberapa relevan menyelesaikan sebuah problemset programming versus menggunakan git? ditambah lagi dengan &lt;a href="http://en.wikipedia.org/wiki/Correlation_does_not_imply_causation"&gt;correlation doesn't mean causation&lt;/a&gt;, ditambah lagi dengan &lt;a href="http://windows.github.com/"&gt;mudahnya menggunakan github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tentu saja saya nggak menentang penggunaan teknologi dan metodologi yang beliau kemukakan, saya sendiri punya akun github dan aktif di sosial media, menggunakan berbagai layanan dan tools yang membuat saya lebih produktif. Saya sangat setuju bahwa setiap individu harus &lt;a href="/2014/02/masa-depan-vs-trend-kemarin-sore.html"&gt;terus mengasah pengetahuannya secara proaktif karena dunia berkembang luar biasa cepat&lt;/a&gt;. Bagi pelajar, mempunyai online presence di tempat-tempat seperti Github, milis dan sebagainya bukan hanya sebagai suplemen untuk belajar yang lebih efektif, tapi juga sebuah jembatan kedunia informasi yang jauh lebih luas. Namun menjadi proaktif secara individual, pada akhirnya hanya akan memberi keuntungan secara individu. Target yang lebih besar, yaitu mencari metodologi pendidikan modern serta merombak yang lama, adalah misi yang efeknya jauh lebih besar.&lt;/p&gt;
&lt;p&gt;Meskipun belum menemukan kandidat yang ideal, beberapa tahun yang lalu saya diperkenalkan dengan &lt;a href="https://www.youtube.com/watch?v=gM95HHI4gLk"&gt;KhanAcademy melalui TED&lt;/a&gt;. Melalui event ini, sang penemu KhanAcademy menjelaskan permasalahan yang hampir mirip dengan pembahasan ini; banyak murid yang tidak bisa mengejar ketinggalan materi di kelas dan 'malu' untuk terus-terusan bertanya hal yang itu-itu saja, sementara kurikulum terus berjalan.&lt;/p&gt;
&lt;p&gt;Inilah yang KhanAcademy coba untuk selesaikan, dengan cara memberikan video materi pembelajaran seperti aritmatika, biologi, astronomi dan sebagainya, pengunjung dipersilahkan untuk nonton dan mengulang sepuasnya, lalu dihadapkan dengan ratusan latihan yang seiring dengan waktu, akan menyesuaikan dengan kemampuan dan teknik belajar mereka. Siapapun bebas mau belajar apa dan mulai dari mana, kita bisa men-track progress kita, bagian apa yang paling susah dimengerti, serta berdiskusi dengan member lain.&lt;/p&gt;
&lt;p&gt;Perbedaan utamanya adalah disini kita bisa mulai belajar dari manapun, ingin belajar pemrograman? bisa mulai dari Java, tidak cocok? mulai dengan Python, dsb. Setiap individu bisa belajar dan mencapai target yang sama melalui jalur yang berbeda, tanpa ada target waktu tertentu.&lt;/p&gt;
&lt;p&gt;Menurut saya pendidikan modern jauh dari sekedar menggunakan modern tools, tapi lebih kepada bagaimana teknologi dan tools tersebut menyelesaikan permasalahan dalam proses belajar-mengajar, jangan hanya sekedar &lt;em&gt;tools tambahan&lt;/em&gt;. Saya akan lebih senang kalau belajar melalui &lt;em&gt;screencast&lt;/em&gt; seperti di KhanAcademy, kumpul tugas tanpa git pun tak masalah, kirim sourcecode dalam zip pun tak mengapa; meskipun bagus, mereka tidak terlalu relevan.&lt;/p&gt;
&lt;p&gt;Tentu saja model pembelajaran seperti di KhanAcademy bukan hal yang mudah untuk diterapkan di institutsi pendidikan konvensional, di US saja masih belum banyak institusi yang memanfaatkan KhanAcademy secara penuh, lebih-lebih berganti total. Tapi menurut saya ini adalah salah satu awal menuju pendidikan yang lebih modern, menggantikan sistem belajar-mengajar yang stagnan selama belasan, puluhan atau bahkan ratusan tahun yang lalu. Menuju ke sistem belajar yang jauh lebih bebas dan versatile, agar para mahasiswa bisa &lt;a href="http://paulgraham.com/love.html"&gt;belajar apa yang mereka sukai, dan menyukai apa yang mereka pelajari&lt;/a&gt;.  Mengutip testimoni Bill Gates diakhir video TED diatas:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You just got a glimpse at the future of education.&lt;/p&gt;
&lt;/blockquote&gt;</summary></entry><entry><title>Masa depan vs trend kemarin sore</title><link href="http://kecebongsoft.com/2014/02/masa-depan-vs-trend-kemarin-sore.html" rel="alternate"></link><updated>2014-02-21T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-02-21:2014/02/masa-depan-vs-trend-kemarin-sore.html</id><summary type="html">&lt;p&gt;Akhirnya datang juga. Saya adalah salah satu yang paling penasaran dengan langkah &lt;a href="http://gizmodo.com/a-humans-guide-to-googles-many-robots-1509799897"&gt;Google membeli selusin&lt;/a&gt; perusahaan dan institusi robotika: Schaft (tim robot Jepang pemenang kontes DARPA), Industrial Perception (3D vision robotics), Redwood Robotics (terfokus di motor functions), Boston Dynamics (ultra-responsive humanoid robotics), dan seabrek perusahaan robotics lainnya. Beberapa bulan sebelumnya, Google juga berinvestasi biotech startup seperti Amidab dan Calico, yang visi-misinya adalah untuk better-living seperti anti-aging dan obat berbasis protein. Sedangkan untuk akuisisi perusahaan robotika, hingga pada waktu Google membeli salah satu selebriti di dunia robotika: Boston Dynamics, Google masih bungkam tentang apa yang akan perusahaan raksaksa dengan aset lebih dari 100 trillion ini lakukan terhadap selusin perusahaan robotika yang dibelinya. &lt;/p&gt;
&lt;p&gt;Lebih terdengar menakutkan atau menjanjikan?. Melihat kebelakang dengan hal-hal yang sudah mereka perkenalkan, Google tidak terdengar seperti perusahaan yang suka bermain aman, sebagian besar dari kita masih memperdebatkan tingkat keamanan &lt;a href="/2011/03/mobil-tanpa-supir-milik-google.html"&gt;Google self-driving car&lt;/a&gt; ketika Google memperkenalkan &lt;a href="http://www.google.com/glass/start/"&gt;Google Glass&lt;/a&gt;, yang tentunya semakin banyak menuai kontroversi, namun tidak dipungkiri visi yang tertanam didalamnya bisa merubah cara hidup kita sebagaimana itu telah terjadi ketika Google Search diperkenalkan hampir 14 tahun yang lalu. &lt;/p&gt;
&lt;p&gt;Hari ini, Google memperkenalkan &lt;a href="https://www.google.com/atap/projecttango/"&gt;Tango&lt;/a&gt;, sebuah cara untuk men-digitalkan lingkungan sekitar kita dengan menggunakan kamera smartphone. Kamera cukup di arahkan ke sekeliling kita dan Tango akan membuat model 3Dnya lengkap dengan semua objek yang ada disekitar kita. Bayangkan ini seperti Google Map yang punya alur jalan, disini Tango akan membuat alur jalan didalam sebuah ruangan: ia akan mengerti arah mana yang tidak bisa/bisa dilewati, seperti koridor, atau dinding dan meja. Seperti Google Map yang bisa memberikan kita rekomendasi restoran atau pom bensin terdekat, Tango juga nantinya bisa memberitahu kita letak buku yang kita cari di perpustakaan yang besar, atau juga memberitahu posisi penjahat didalam sebuah gedung tanpa polisi harus masuk. Dengan Tango kita juga bisa bermain virtual reality, dimana akan ada objek virtual yang bisa berkeliling ruangan kita, dan kita bisa melihatnya melalui layar smartphone, pernah terpikir untuk main petak umpet dengan karakter virtual dikantor Anda?.&lt;/p&gt;
&lt;p&gt;Dengan banyaknya pujian yang diterima oleh Tango, datang juga banyak skeptisisme dan ketakutan, seperti Google yang nantinya akan memiliki lebih banyak lagi informasi pribadi kita, terlebih lagi dengan pemberitaan beberapa bulan ini tentang pemerintah yang melakukan penyadapan data melalui perusahaan teknologi seperti Google dan Facebook, sehingga hampir tidak satu orang pun datanya akan aman di internet. Bagaimana nasib Tango dan penerimaanya di khalayak luas nanti, kita akan lihat. Yang jelas, Tango adalah salah satu buah dari hasil membeli selusin perusahaan robotika beberapa bulan yang lalu. Dan kita sekarang sudah mulai bisa membaca kemana arahnya, besar kemungkinan Tango akan diintegrasikan dengan Google Glass, mengingat smartphone bukanlah benda yang ergonomis untuk environmental mapping, bisa juga ini akan diintegrasikan dengan self-driving car, atau Google juga membuat robot mini yang bisa melakukan auto-mapping tanpa supervisi manusia.&lt;/p&gt;
&lt;p&gt;Tango bukanlah yang pertama melakukan 3D mapping seperti ini, sudah banyak upaya pihak lain untuk mengaplikasikan 3D mapping. Salah satu yang menurut saya menarik adalah &lt;a href="http://www.nintendo.co.uk/Nintendo-3DS/Instant-Software/AR-Games-Augmented-Reality/AR-Games-Augmented-Reality-115169.html"&gt;Nintendo 3DS&lt;/a&gt;, sebuah konsol dengan bentuk seperti Gameboy, yang dilengkapi dengan 6 buah kartu yang bisa disusun diatas meja, kemudian jika kita arahkan konsol ini ke kartu-kartu tersebut, dilayar konsol akan terbentuk objek 3D yang akan merespon pergerakan konsol kita.&lt;/p&gt;
&lt;p&gt;Melihat satu lagi hal yang diperkenalkan oleh Google ini, membuat saya merasa bahwa hal-hal yang kita pelajari sekarang akan semakin cepat menjadi &lt;em&gt;outdated&lt;/em&gt;. Baru beberapa tahun lalu saya bisa membuat website sendiri, namun anak-anak SMA sekarang sudah bermain mikrokontroler dan robotika. &lt;/p&gt;
&lt;p&gt;Inilah kenapa tulisan ini saya beri judul "masa depan vs trend kemarin sore". Beberapa waktu lalu, Facebook membeli Whatsapp dengan harga $19 billion, dan sebelumnya juga membeli Instagram $1 billion. Menarik sekali melihat dua perusahaan raksaksa, Google dan Facebook, melakukan investasi dengan jumlah besar, ke arah yang berbeda. Apa yang membedakan? Google melakukan investasi ke bidang yang masih relatif baru, sementara Facebook kearah yang sudah aman dan terbukti. Tidak hanya Google dan Facebook, cukup banyak startup yang &lt;em&gt;bermain aman&lt;/em&gt; dengan memilih jalur yang sudah proven, seperti social network dan sejenisnya, karena itulah kita masih melihat website seperti Google+, Path, dan sebagainya.&lt;/p&gt;
&lt;p&gt;"Trend kemarin sore" saya pinjam dari sebuah tulisan menarik tentang &lt;a href="http://takeaswig.com/the-end-of-the-facebook-era"&gt;Facebook adalah last-year fashion&lt;/a&gt;: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What was cool in the 70s wasn’t cool in the 80s. What became cool in the 80s was no longer cool in the 90s. Social networks are susceptible to the same shift in trends and fashion that we’ve witnessed in society before our social lives extended into the digital world. This is why social networks, like Google+ (where I worked for one year), are struggling even more than Facebook to get a foothold in the future of social networking. They are betting on last year’s fashion – they’re fighting Facebook for the last available room on the Titanic when they should be looking at all of the other ships leaving the marina.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Menarik sekali bahwa tidak hanya di level startup, kita-kita pun secara individual masih banyak bermain di last-year fashion, bidang-bidang yang kenyataannya sekarang sedang terbenam menunggu tenggelam. Banyak dari kita yang aware bahwa hal-hal yang sedang kita pelajari saat ini, besok pagi sudah akan tenggelam digantikan oleh hal-hal baru, namun tetap menjalaninya. Saya sering mengingatkan diri sendiri setiap kali belajar hal baru, untuk memahami konsepnya lebih dari teknologinya. Ini pula yang saya terapkan dipemrograman, sebagai upaya saya untuk tidak terikat di last-year fashion, agar tidak terikat di bahasa pemrograman atau framework manapun, serta lebih mendalami konsep fundamentalnya yang bisa saya terapkan di teknologi lain.&lt;/p&gt;
&lt;p&gt;Sebuah tulisan menarik tentang automation yang saya baca, 10 tahun yang lalu, kita harus menghabiskan 500 ribu dollar untuk melakukan bisnis logistik, yang hari ini, bisa dilakukan dengan biaya $30 melalui automation. Contoh lainnya? Beberapa tahun yang lalu web freelancer kebanjiran job membuat website, hari ini? sudah ada Wordpress, dan gratis. &lt;a href="http://blog.baugues.com/autoworkers"&gt;Mengutip dari blog yang bersangkutan&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Don’t get too comfortable. Don’t get locked into a language. Don’t burn bridges for short term gain. Keep your tools sharp. Learn soft skills. Build an audience. Save some money. Network. Read.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Larry Page bisa menyimpulkan ini dalam dua kata: &lt;a href="http://www.wired.com/business/2013/01/ff-qa-larry-page/"&gt;moon shot&lt;/a&gt;. Untuk mengikuti perkembangan jaman yang benar-benar cepat seperti sekarang, dan terhindar dari tempurung last-year fashion, maka kita harus memiliki target yang tinggi. Caranya? selalu berani mengambil resiko dan tidak bermain dizona aman, hal-hal yang bisa membuat kita berkembang berkali-kali lipat dibanding dengan hal-hal yang biasa kita lakukan setiap harinya, mengutip perkataan &lt;a href="http://blog.codinghorror.com/10-years-of-coding-horror/"&gt;Jeff Atwood&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of my philosophies is to always pick the choice that scares you a little. The status quo, the path of least resistance, the everyday routine — that stuff is easy. Anyone can do that. But the right decisions, the decisions that challenge you, the ones that push you to evolve and grow and learn, are always a little scary.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Semoga dengan berbagai macam inovasi yang ada sekarang, bisa membuat saya juga termotivasi untuk belajar lebih banyak lagi dan berani keluar dari zona aman.&lt;/p&gt;</summary></entry><entry><title>HHKB Pro 2 akhirnya sampai</title><link href="http://kecebongsoft.com/2014/02/hhkb-pro-2-akhirnya-sampai.html" rel="alternate"></link><updated>2014-02-04T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-02-04:2014/02/hhkb-pro-2-akhirnya-sampai.html</id><summary type="html">&lt;p&gt;Beberapa minggu yang lalu, saya pernah menulis tentang petualangan saya &lt;a href="/2014/01/keyboard-mekanikal.html"&gt;mencari mechanical keyboard yang cocok&lt;/a&gt;. Garis besarnya dengan semakin tahu tentang seluk-beluk keyboard yang sesungguhnya, saya semakin menganggap keyboard yang ada dipasaran jauh lebih &lt;em&gt;inferor&lt;/em&gt; dibandingkan dengan keyboard mekanikal; yang menggunakan switch mekanikal dan memberikan &lt;em&gt;feel&lt;/em&gt; yang lebih nyaman ketika mengetik. Pada saat itu saya memutuskan HHKB Pro 2 ada mekanikal keyboard selanjutnya yang akan saya coba. Beberapa hari kemarin, saya menemukan sebuah reselller yang menjual keyboard ini dengan harga yang cukup kompetitif, saya memutuskan untuk &lt;em&gt;&lt;a href="http://en.wikipedia.org/wiki/Bite_the_bullet"&gt;bite the bullet&lt;/a&gt;&lt;/em&gt; dan melakukan pemesanan. Setelah beberapa hari tertunda dikarenakan musim libur panjang, akhirnya hari ini keyboard tersebut sampai ditangan dan saya bisa mencobanya &lt;em&gt;firsthand&lt;/em&gt;. Apa saja impresi pertama saya terhadap keyboard mekanikal yang menggunakan switch Topre ini?&lt;/p&gt;
&lt;p&gt;&lt;img alt="img" src="/img/hhkb/brown-box.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Saya memesan keyboard ini melalui &lt;a href="http://whiterabbitexpress.com/happy-hacking-keyboard-profesional2/"&gt;WhiteRabbitExpress&lt;/a&gt; (WRE), WRE adalah sebuah layanan di Jepang yang menerima pemesanan barang-barang produksi jepang ke luar negeri, layanan inin sangat membantu pembeli internasional karena banyak sekali &lt;em&gt;entry barrier&lt;/em&gt; untuk membeli barang-barang di Jepang seperti pengiriman dan bahasa, bahkan situs-situs seperti Amazon juga belum bisa menyelesaikan masalah ini dengan elegan, sedangkan reseller lain yang basisnya diluar jepang menjual barang-barang dengan harga yang jauh lebih tinggi, semua ini diselesaikan oleh WRE dengan menjadi mediator antara penjual dan pembeli, kemudian WRE akan mengambil untuk 10% atau minimal $30 dari harga barang, dan ongkos kirim akan ditanggung sepenuhnya oleh pembeli, sangat simpel!.&lt;/p&gt;
&lt;p&gt;Proses pemesanan dimulai dari meminta &lt;em&gt;quote&lt;/em&gt; dari WRE, sederhananya adalah si pembeli me-&lt;em&gt;request&lt;/em&gt; harga terbaru dari produk yang ingin dibeli, kemudian WRE akan mengirimkan detail total harga yang harus dibayar jika kostumer tertarik untuk membeli barang tersebut, kemudian melanjutkan ke proses pembayaran dan pengiriman. Saat pertama kali saya me-&lt;em&gt;request&lt;/em&gt; &lt;em&gt;quote&lt;/em&gt; dari WRE, saya cukup kaget karena respon mereka sangat cepat dan ramah. Ini kontras sekali dengan pengalaman saya berbelanja online di situs lain seperti Amazon dan Github Shop, yang sangat minim komunikasi dan terkesan acuh-tak-acuh. Setelah saya mantap dengan &lt;em&gt;quote&lt;/em&gt; yang saya terima, saya melanjutkan ke pemesanan dan pembayaran di WRE. Lagi-lagi saya dibuat kagum dengan sistem e-commerce mereka yang jauh lebih rapi dan konsisten jika dibanding dengan situs lain, terutama Amazon. WRE punya sistem yang sangat mudah dipahami serta memberikan rasa aman; pada saat pertama kali melakukan pembayaran, saya saat itu menggunakan PayPal, ketika menekan tombol "&lt;em&gt;Pay Now&lt;/em&gt;", ternyata saya tidak ingat bahwa akun PayPal saya punya alamat Indonesia sedangkan alamat pengiriman adalah Malaysia, untungnya WRE tidak melakukan charge apapun saat itu dan saya bisa me-&lt;em&gt;revert&lt;/em&gt; order saya dan membuat pembayaran baru menggunakan kartu kredit.&lt;/p&gt;
&lt;p&gt;Setelah melakukan pembayaran barang, sayang mendapat email selanjutnya dari WRE tentang biaya pengiriman (pada hari yang sama), kemudian setelah melakukan pembayaran ongkos kirim, saya mendapatkan nomor seri paket barang saya menggunakan &lt;a href="http://www.post.japanpost.jp/int/ems/index_en.html"&gt;EMS&lt;/a&gt; serta link ke situs tracking system milik EMS. Lagi-lagi saya kagum dengan sistem tracking di EMS yang jauh lebih baik dari courier yang pernah saya pakai di Amazon (yang akhirnya saya hampir kehilangan barang yang terselip di gudang courier!). Di EMS, update tentang status terakhir paket saya diperbaharui dengan sangat cepat, dan saya bisa tahu semua detail tentang keberadaan barang saya. Hanya dalam 2 hari, barang saya akhirnya tiba di Malaysia, berhasil melewati customs tanpa harus membayar biaya tambahan, dan dikarenakan libur imlek, akhirnya barang saya tiba hari ini. &lt;em&gt;Overall&lt;/em&gt; saya sangat puas dengan layanan WRE dan EMS yang jika dibandingkan dengan Amazon dan courier mereka, sangat jauh lebih baik WRE dan EMS. Komunikasi yang ramah dan responsif serta proses yang cepat adalah salah satu kunci kepuasan saya memakai WRE dan EMS.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img" src="/img/hhkb/box.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;HHKB Pro 2 saya sampai dengan dibungkus sebuah cardboard dan buble-wrap yang membungkus kotak asli HHKB, cukup kuat untuk memastikan HHKB dan kotak aslinya tidak lecet pada saat proses pengiriman dari Jepang ke Malaysia dilakukan. Ketika mengangkat kotak paket ini, saya cukup kaget dengan beratnya yang cenderung sangat ringan untuk ukuran mekanikal keyboard, saya cukup khawatir dengan kualitasnya mengingat beratnya yang sangat ringan. Ketika dibuka dan memegang keyboardnya, saya baru mulai menyadari bahwa meskipun beratnya meragukan, &lt;em&gt;build quality&lt;/em&gt; dari HHKB Pro 2 ini ternyata memang &lt;em&gt;premium&lt;/em&gt;, didalam kotaknya terdapat beberapa manual dalam bahasa Jepang, selain itu, hanya ada keyboard dan kabel USB-Mini USB.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img" src="/img/hhkb/box-and-kb.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Saya sudah beberapa jam menggunakan keyboard ini, termasuk untuk menulis artikel ini, saat ini saya belum bisa memberikan impresi tentang &lt;em&gt;feel&lt;/em&gt; switch Topre dan HHKB Pro 2 secara &lt;em&gt;general&lt;/em&gt;, saya berencana untuk menulis artikel terpisah untuk ini, meskipun sejauh ini memang impresi saya terhadap keyboard ini sangat bagus. Ada beberapa hal yang masih membutuhkan penyesuaian, seperti tombol Delete dan &lt;em&gt;arrow keys&lt;/em&gt; yang sekarang berada di &lt;em&gt;letter keys&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img" src="/img/hhkb/kb.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Well, saya akan menulis artikel terpisah tentang bagaimana HHKB Pro 2 ini bekerja, mulai dari &lt;em&gt;feel&lt;/em&gt;, &lt;em&gt;features&lt;/em&gt;, dan &lt;em&gt;build quality&lt;/em&gt;. So stay tuned.&lt;/p&gt;</summary></entry><entry><title>Determinasi dulu dan sekarang</title><link href="http://kecebongsoft.com/2014/02/determinasi-dulu-dan-sekarang.html" rel="alternate"></link><updated>2014-02-03T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-02-03:2014/02/determinasi-dulu-dan-sekarang.html</id><summary type="html">&lt;p&gt;Jika melihat kebelakang, saya seringkali kagum dengan diri saya yang dulu, sekitar 14-15 tahun yang lalu ketika saya masih duduk di bangku SD/SMP. Ketika itu saya baru pertama kali mendapatkan komputer yang tujuan aslinya bukanlah untuk saya, melainkan untuk kakak pertama saya yang saat itu mengenyam pendidikan SMA, yang sedang membutuhkan komputer sebagai pendukung kegiatan belajarnya. Waktu itu komputer bukanlah barang umum, dan saya yang dibesarkan dengan kartun sci-fi seperti Spiderman, Jurrassic, serta game-game playstation, seringkali mengasosiasikan komputer dengan hal-hal yang imaginatif. Hasilnya, rencanya ayah saya membeli komputer membuat saya jauh lebih antusias dibanding si kakak. Berminggu-minggu sebelum membeli, saya sudah membayangkan berbagai macam hal luar biasa yang ingin saya lakukan di komputer, saya membeli buku gambar, lalu membuat berbagai macam sketsa seperti karakter game, robot, mobil, yang rencananya akan saya aplikasikan di komputer tersebut. Aplikasi seperti apa? saya tidak tahu, bahkan memegang komputer pun belum pernah.&lt;/p&gt;
&lt;p&gt;Sampailah hari dimana komputer yang ditunggu datang, saya masih ingat tidak tidur semalaman karena terlalu antusias. Kemudian saya mengetahui kalau komputer yang dibeli ayah adalah bekas, tapi tidak membuat saya kecewa sedikitpun. Komputer tersebut adalah Compact dengan prosesor Intel generasi sebelum pentium, dengan Windows 95, 32MB RAM, CD dan Floppy. Ketika pertama kali dinyalakan dan windows menampilkan desktop, semua imajinasi saya tiba-tiba buyar, tampilan komputer ternyata sangat berbeda dengan apa yang ada di film-film yang saya tonton. Esok harinya, kakak saya mulai menunjukan ketidak tertarikannya terhadap komputer, sehingga sebagian besar kesempatan bisa saya pakai untuk mempelajari benda yang bagi saya benar-benar baru tersebut. Perlahan tapi pasti saya mulai bisa menggunakan program di komputer tersebut, mulai dari Wordpad, Paint, Notepad, Calculator dan lain sebagainya. Dengan kemampuan bahasa inggris yang hampir tidak ada, saya mulai menangkap bagaimana cara membuka sebuah file melalui program apapun, menggunakan Windows Explorer, mencari file, men-defrag hardisk (tanpa tau apa itu defrag), hingga suatu waktu komputer saya rusak dan saya harus berjuang mencari cara memperbaikinya sendiri, karena ayah saya tidak akan mau mengeluarkan biaya lagi untuk memperbaiki komputer yang saat itu harganya tidak murah, saya kemudian mulai belajar tentang installasi ulang windows, dan berhasil melakukannya untuk pertama kali, dengan modal 10 floppy disk yang saat itu saya gunakan untuk backup data, yang akhirnya tidak dipakai sama sekali!.&lt;/p&gt;
&lt;p&gt;Seiring waktu berjalan, saya mulai fasih menggunakan komputer, dan mulai kenal dengan dunia game development dari majalah-majalah seperti Hotgame, Chip dan Mikrodata. Saat itu saya masih ada di bangku SMP, dan setiap kali membaca majalah-majalah tersebut, hati saya berdegub kencang, ingin sekali rasanya menghasilkan sesuatu (game) tapi saat itu pengetahuan saya sangat minim sekali. Setiap sore saya selalu ke toko majalah menanyakan apakah ada edisi baru dari salah satu majalah tersebut, saya menyisihkan uang jajan saya untuk membeli ketiga majalah tersebut yang saat itu rata-rata harganya adalah 30 ribu rupiah. Kemudian pada satu waktu, saya menemukan sebuah artikel tentang membuat game menggunakan HTML dan Applet di majalah Mikrodata, itu adalah salah satu pintu pertama saya di dunia programming, artikel tersebut melampirkan full source code untuk membuat game, dan saya menyalinnya ke komputer selama beberapa jam, yang akhirnya tidak jalan sama sekali. Tapi dengan kegagalan itu saya belajar tentang sintaks Applet dan HTML (yang tidak bisa saya bedakan keduanya pada saat itu). Kemudian saya menjadi lebih antusias di dunia gamedev, saya mulai curi-curi kesempatan untuk pergi ke mall (saat itu saya tidak diperbolehkan karena jauh dan tidak bisa naik motor). Di mall, saya menghabiskan berjam-jam di warnet, itu adalah masa-masa pertama bagi saya mengenal internet, kemudian saya juga menghabiskan waktu di toko buku, untuk membaca buku pemrograman game menggunakan Pascal dan VB, karena uang yang tidak cukup, saya membawa buku catatan dan menyalin bagian-bagian penting buku, seringkali saya tertangkap basah sedang menyalin oleh staff lalu kemudian dimarahi, tapi karena usia saya yang masih SMP, saya hampir tidak merasa malu, saya hanya merasa sedikit takut, lalu melanjutkan aktifitas saya seperti biasa.&lt;/p&gt;
&lt;p&gt;Di rumah, saya mulai melihat iklan tentang telkomnet instan di TV, pada satu malam, saya secara diam-diam mulai menggunakan layanan tersebut, dan mulai aktif di dunia maya, email pertama saya berada di Plasa.com, dan melalui situs tersebut juga, saya mulai mengenal tentang dunia Chat, saya juga mulai mengenal cara membuat situs dengan bantuan Geocities dan Tripod. Pada saat itu saya sangat ketagihan dengan internet untuk mencari berbagai macam pembelajaran. Hingga pada satu waktu sepulang dari sekolah, saya akhirnya ketahuan memakai telkomnet instan dari tagihan telepon yang mencapai angka diatas 2 juta. Angka yang luar biasa besar di jaman itu, dan saya sama sekali tidak terfikir bahwa layanan telkomnet instan yang saya pakai setiap malam ternyata memakan biaya sebanyak itu. Saya dimarahi habis-habisan selama beberapa minggu selanjutnya. Saat itu saya dipenuhi oleh rasa bersalah, tapi pada waktu yang sama antusiasme saya di bidang komputer tidak luluh sedikitpun, malah semakin bertambah.&lt;/p&gt;
&lt;p&gt;Beberapa minggu kemudian, saya berhasil menghasilkan sebuah game berjenis Dart menggunakan software SwishMax, lalu berlanjut ke game HTML kemudian VB. Saya semakin antusias di bidang pemrograman, saya menghabiskan banyak sekali uang dan waktu untuk belajar pemrograman, mengesampingkan waktu untuk keluarga dan teman sebaya. Saya masih ingat saat itu pernah mengajukan proposal pembuatan website untuk sekolah SMP saya, yup, benar sekali, waktu SMP saya pernah membuat website untuk SMP saya dan mengajukannya ke kepala sekolah, yang akhirnya kemudian di tolak mentah-mentah, karna pada akhirnya ya saya memang masih SMP.&lt;/p&gt;
&lt;p&gt;Waktu berjalan hingga akhirnya saya masuk SMK, antusias saya di bidang pemrograman tidak turun sedikitpun, tapi bergeser dari game ke web development. Disinipun saya menghabiskan banyak waktu untuk belajar, belajar dan belajar. Saat itu dipikirkan saya hanya ingin belajar tentang segalanya, saya ingin tahu segalanya.&lt;/p&gt;
&lt;p&gt;Semakin banyak saya belajar, semakin banyak saya tahu, hingga pasca kuliah hingga bekerja sekarang, ketika saya sudah cukup tahu tentang berbagai hal, mulailah muncul berbagai macam &lt;em&gt;noise&lt;/em&gt;, atau gangguan kanan-kiri yang terkadang memecahkan konsentrasi saya. Saya mendapati diri saya lebih jarang belajar hal-hal baru ketimbang dulu di awal-awal, saya lebih banyak terganggu dengan hal-hal sepele seperti lurking di situs aggregator seperti HN dan Reddit, memikirkan tentang setup yang ergonomic, debat kusir tentang IDE yang terbaik, atau sekedar melihat-lihat timeline twitter dan facebook. Saya masih ingat dulu ketika saya tidak punya akses seperti ini serta tanpa social network seperti sekarang, saya justru jauh lebih produktif dalam hal belajar.&lt;/p&gt;
&lt;p&gt;Saya sering berfikir, apakah saya masih bisa punya determinasi seperti dulu? seperti ketika saya rela dimarahi oleh staff penjaga toko buku? atau seperti ketika saya dimahari orang tua karena memakai internet diam-diam? atau juga seperti ketika saya tahan tidak tidur hingga pagi hari untuk membuat program?.&lt;/p&gt;
&lt;p&gt;Karena itulah belakangan ini saya mulai berfikir, dengan akses yang luar biasa mudah seperti sekarang, saya seharusnya bisa memaksimalkannya dan bisa menghasilkan hal-hal yang lebih bermanfaat, dengan pengetahuan yang jauh lebih ada ketimbang dulu, saya seharusnya bisa berbagi kepada teman-teman lain jauh lebih banyak dibanding dulu. Saya mulai meluangkan lebih banyak waktu lagi didepan komputer, untuk sekedar menulis artikel, membuat library, atau melanjutkan ide-ide saya dulu yang sempat tertunda.&lt;/p&gt;
&lt;p&gt;Saya berharap tulisan ini nantinya bisa menjadi pengingat bagi saya untuk tetap memaksimalkan apapun yang saya punya: waktu, pengetahuan, sumber daya, semuanya. Saya berharap tulisan ini bisa membangkitkan semangat saya di waktu malam atau pagi, untuk menimba ilmu dan tetap produktif, dengan determinasi yang tinggi, sama seperti diri saya yang dulu saat masih polos dan penuh dengan rasa ingin tahu.&lt;/p&gt;</summary></entry><entry><title>Berganti Klien Email</title><link href="http://kecebongsoft.com/2014/01/berganti-klien-email.html" rel="alternate"></link><updated>2014-01-28T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-01-28:2014/01/berganti-klien-email.html</id><summary type="html">&lt;p&gt;Saya adalah pengguna GMail, seperti pengguna GMail yang lainnya, saya menggunakan GMail web-client. Saya masih ingat kira-kira tahun 2007 lalu ketika pertama kali mendaftar GMail, interface GMail sangat polos dan ketika itu saya masih lebih suka interface Yahoo! Mail. Setelah beberapa tahun berpindah-pindah antar  GMail dan Yahoo!, saya mulai merasakan interface, GMail meskipun lebih polos, ternyatak jauh lebih solid dan konsisten dibanding Yahoo!, saya pun perlahan memindahkan semua aktifitas email saya dari Yahoo! ke GMail.&lt;/p&gt;
&lt;p&gt;Selama beberapa tahun selanjutnya, saya adalah pengguna berat GMail web-client, banyak sekali fitur-fitur GMail web client yang saya sukai, search yang benar-benar &lt;em&gt;functional&lt;/em&gt;, fitur filter, label dan folder yang jika digabungkan, akan membuat manajemen email menjadi sangat mudah. Folder adalah tempat dimana kita bisa memasukan email, kemudian label adalah fitur dimana kita bisa men-&lt;em&gt;tag&lt;/em&gt; email, ketika email hanya diberi label, maka dia akan tetap muncul di inbox, sehingga kita sadar tentang keberadaannya, biasanya ini untuk email-email yang penting, sementara untuk yang tidak penting, email tersebut bisa langsung berpindah ke folder tertentu tanpa harus melewati inbox.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img" src="/img/inbox-zero-gmail.png" /&gt;&lt;/p&gt;
&lt;p&gt;Salah satu approach saya dalam email sehari-harinya adalah &lt;a href="http://whatis.techtarget.com/definition/inbox-zero"&gt;Inbox Zero&lt;/a&gt;, yaitu bagaimana memisahkan email yang sudah kita handle (reply/take action) dengan yang belum. Approach ini adalah vital karena ketika melakukan berbagai macam komunikasi via email, saya sering terlewat mana yang belum di handle, saya sempat membuat todo-list terpisah untuk mencatat email mana yang harus saya handle. &lt;/p&gt;
&lt;p&gt;Di GMail, ada dua section di bagian inbox, read dan unread, kemudian ada folders, label dan filter. Untuk mencapai inbox zero, di Gmail saya sering menggabungkan folders, labels dan filter, agar semua email yang tidak perlu di handle (cth: notifikasi, newsletter, etc) akan otomatis masuk ke folder tertentu tanpa harus melewati inbox, sedangkan email yang penting harus masuk inbox sampai nanti saya mark as read (dengan membuka email tersebut).&lt;/p&gt;
&lt;p&gt;Selama beberapa tahun, cara seperti ini cukup jitu, namun saya mulai berfikir ketika suatu saat nanti jika suatu saat nanti saya harus meninggalkan GMail, mungkin karena servicenya ditutup atau alasan lain, saya harus bisa tetap menggunakan email seperti biasa tanpa harus dipusingkan dengan migrasi. Bagi saya email yang sustainable sangat penting, dan mungkin sama halnya seperti &lt;a href="/2014/01/blog-yang-sustainable.html"&gt;migrasi blog kemarin&lt;/a&gt;, kemungkinan suatu saat nanti saya harus berpindah platform, tapi tidak berpindah protokol (email).&lt;/p&gt;
&lt;p&gt;Akhirnya saya mulai mencoba-coba untuk tidak bergantung pada GMail, salah satunya adalah dengan tidak terlalu banyak menggunakan fitur-fitur yang spesifik ke GMail, seperti penggabungan folders, labels dan filters seperti diatas. Saya mulai harus mengubah pattern email saya menjadi lebih umum: Email masuk -&amp;gt; sortir -&amp;gt; take-action -&amp;gt; pindahkan ke folder.&lt;/p&gt;
&lt;p&gt;Dengan pola tersebut, saya bisa menggunakan hampir email client apapun (desktop / web) tanpa harus spesifik ke platform tertentu, dan tentunya ini akan lebih fleksibel ketika suatu saat nanti saya harus berpindah platform.&lt;/p&gt;
&lt;p&gt;Setelah menghabiskan beberapa jam &lt;em&gt;membersikan&lt;/em&gt; inbox saya, akhirnya saya bisa mengaplikasikan pola ini. Setelah dilihat-lihat, ternyata cara saya menggunakan email selama ini cukup tidak beraturan, banyak pesan yang sudah dibaca tapi tetap masuk di inbox, dimana seharusnya mereka sudah dipindahkan ke folder yang sesuai. Kenapa? karena ketika menggunakan email klien  yang lain, seperti Outlook atau Apple Mail, semua pesan ini akan muncul di inbox, ini dikarenakan email klien yang lain tidak memisakan antara inbox yang sudah di read dan unread.&lt;/p&gt;
&lt;p&gt;Setelah memindahkan ribuan email ke folder dengan rapi, saya memutuskan untuk mencoba desktop email client &lt;a href="http://airmailapp.com/"&gt;AirMail&lt;/a&gt;. AirMail adalah aplikasi desktop email hasil reinkarnasi SparrowMail, dekstop email yang sempat booming karena integrasi kuat dengan GMail, namun setelah SparrowMail dibeli oleh Google, aplikasi ini berhenti dikembangkan dan tidak ada sinyal untuk dilanjutkan, sehingga saya memilih AirMail, yang secara harga dan fitur jauh lebih kompetitif dibandingkan dengan SparrowMail.&lt;/p&gt;
&lt;p&gt;Selama beberapa hari ini cukup cocok dengan klien ini, meskpun ada satu dual hal yang tidak pas (sama seperti software apapun), tapi saya mulai berkomitmen untuk menjadi dari email platform tertentu dengan memperbaiki pola ber-email saya. Sekarang setiap email masuk saya akan mensortir manual dan memindahkannya ke folder yang sesuai (tanpa label), multiple account yang saya gunakan di GMail untuk personal dan pekerjaan juga tetap bisa dipakai di AirMail dengan menggunakan Alias.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img" src="/img/inbox-zero-airmail.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;All in all&lt;/em&gt;, ini adalah percobaan saya untuk menjauh dari platform-spesifik email, memperbaiki pola saya dalam menggunakan email, dan mencoba alternatif desktop email client yang mudah-mudahan bisa saya pakai hingga beberapa tahun kedepan tanpa harus memikirkan lagi platform email apa yang saya gunakan.&lt;/p&gt;</summary></entry><entry><title>Blog yang sustainable</title><link href="http://kecebongsoft.com/2014/01/blog-yang-sustainable.html" rel="alternate"></link><updated>2014-01-21T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-01-21:2014/01/blog-yang-sustainable.html</id><summary type="html">&lt;p&gt;Saya selalu menganggap blog adalah media yang penting, tapi tidak sepenting sekarang, ketika tanpa terasa, saya sudah ngeblog hampir 10 tahun, ya, sepuluh tahun!. &lt;/p&gt;
&lt;p&gt;Rasanya baru kemarin saya ngeblog, kemudian ketika saya mulai menggunakan static blog generator Pelican tahun lalu, lalu menyatukan semua postingan blog saya ke sini, terungkaplah bahwa postingan blog pertama saya adalah &lt;a href="http://shoput.blogspot.com/"&gt;bulan Mei 2004 di Blogspot&lt;/a&gt;, waktu itu saya masih SMP, mulai belajar pemrograman dan membuat beberapa software game, saat itu saya juga aktif mengisi entry di Geocities, yang sekarang sudah dicampakan oleh Yahoo, kemudian &lt;a href="http://kecebong.madpage.com/old/"&gt;saya membuat blog sendiri&lt;/a&gt; menggunakan PHP karena saat itu belum mengenal Wordpress, lalu dilanjutkan dengan &lt;a href="http://kecebong.madpage.com/blog/"&gt;menginstall wordpress&lt;/a&gt;, lalu &lt;a href="http://kecebngsoft.wordpress.com"&gt;berpindah ke Wordpress.com&lt;/a&gt;, selang beberapa tahun saya &lt;a href="http://kecebongsoft.tumblr.com"&gt;sempat mencoba Tumblr&lt;/a&gt;, &lt;a href="http://kecebongsoft.lifejournal.com"&gt;LifeJournal&lt;/a&gt;, &lt;a href="http://kecebongsoft.typepad.com"&gt;Typepad&lt;/a&gt; dan banyak lagi.&lt;/p&gt;
&lt;p&gt;Saya banyak sekali menemukan entry-entry lama yang sangat sayang kalau harus dihilangkan, postingan, komentar, karya-karya, dan lain sebagainya. Saat ini saya sedang dalam proses memindahkan itu semua ke blog ini.&lt;/p&gt;
&lt;p&gt;Saya baru merasakan seberapa pentingnya data-data post dan komentar tersebut setelah mencoba mencari dan menyatukan semuanya, setiap platform mempunyai standar yang berbeda, terutama untuk komentar yang sangat dinamis dan cukup sulit untuk di regenerate.&lt;/p&gt;
&lt;p&gt;Saya juga mulai menyadari satu hal penting, blog seharusnya ada si sebuah platform yang sustainable, platform yang harusnya bisa bertahan hingga berpuluh-puluh tahun, blog sudah seperti catatan perjalanan hidup, sementara platform bisa saja hilang seiring dengan berjalannya waktu, bisa jadimatikan oleh induk perusahaan (seperti Geocities), atau tractionnya sudah memudar (seperti LifeJournal).&lt;/p&gt;
&lt;p&gt;Setelah diteliti, rasanya sangat sulit menemukan sebuah blog platform yang sustainable, apakah Wordpress dan Blogspot akan tetap ada 20-30 tahun lagi? apa yang akan terjadi pada konteks Blog itu sendiri. Saya akhirnya memutuskan untuk tidak terpaku pada platform, melainkan pada konsep dan protokol.&lt;/p&gt;
&lt;p&gt;Konsep blog saat ini, adalah sebuah post dengan judul, tanggal, dan isi, kemudian bisa ditambahkan dengan komentar (nama dan komentar). Untuk kedepannya, saya akan mencoba mempertahankan konsep ini, tidak ada tambahan lain, tidak ada kategori, tags, dan yang lainnya. Dengan ini mensortir tentu lebih rumit, tapi jumlah post saya sendiri juga tidak banyak, lagipula menurut pengalaman, memasukan sebuah post kedalam kategori dan tags sangat rentan terhadap inkonsistensi, sebuah post bisa terdiri dari beberapa kategori dan tags, dan beberapa post bisa punya konteks yang sama, tapi karena perbedaan waktu yang jauh, kita lupa untuk menyamakan struktur kategori dan tags nya. Saya memutuskan untuk tidak menggunakan kategori dan tags, dan orang bisa melihat daftar post dengan cara &lt;a href="http://kecebongsot.com/archives.html"&gt;melihat arsip&lt;/a&gt;, atau search by keyword.&lt;/p&gt;
&lt;p&gt;Kemudian saya harus menggunakan medium atau protokol, kali ini saya tidak ingin lagi terpaku pada wordpress, tumblr dan sebagainya, saya ingin blog saya bisa di host &lt;em&gt;hampir&lt;/em&gt; dimanapun. Caranya? buat sesimpel mungkin, dengan konten HTML statik. Dengan ini saya bisa memasukan blog saya di hosting manapun, bisa di Github, Webfaction, Amazon S3, dan yang lainnya, ketika salah satu hostingan bangkrut, saya bisa dengan mudah memindahkan blog saya ketempat lain dengan struktur dan sistem yang benar-benar tidak berubah, tinggal disandingkan dengan sebuah domain. Untuk memudahkan pengerjaannya, saya menggunakan &lt;em&gt;static blog generator&lt;/em&gt; &lt;a href=""&gt;pelican&lt;/a&gt; yang ditulis menggunakan python, Pelican memungkinkan kita untuk membuat post dalam berbagai format seperti Markdown, lalu di compile menjadi statik HTML. Saya bisa menyimpan post mentah saya dalam format Markdown, kemudian memasukannya dalam sebuah repository (yang lagi-lagi bisa disimpan dimanapun). Pelican sendiri meskipun suatu saat nanti akan mati, sebagai OSS project kita masih bisa menggunakan source codenya.&lt;/p&gt;
&lt;p&gt;Saat ini untuk mencapai tujuan tersebut, saya menggunakan &lt;a href="http://github.com/kecebongsoft/kecebongsoft.github.com.git"&gt;Github pages&lt;/a&gt; untuk host blog saya, kemudian dihubungan oleh domain &lt;a href="http://kecebongsoft.com"&gt;kecebongsoft.com&lt;/a&gt;. Repositorinya sendiri saya pisahkan menjadi dua, satu untuk source dan satu lagi untuk build (yang kemudian dijadikan sebagai github pages).&lt;/p&gt;
&lt;p&gt;Dengan cara ini, saat github sendiri nanti sudah tiada, saya bisa memindahkan blog ini kemanapun tanpa harus mengganti apa-apa. Namun tentu saja ada kekurangannya, karena blog ini murni statik HTML, tidak ada elemen dinamis yang bisa di support, contohnya komentar, kita hanya bisa menggunakan &lt;em&gt;embeddable commenting platform&lt;/em&gt; seperti &lt;a href="http://lifefyre.com"&gt;Lifefyre&lt;/a&gt; atau &lt;a href="http://disqus.com"&gt;Disqus&lt;/a&gt;, yang suatu saat nanti juga akan padam. Jadi untuk saat ini saya masih mencari cara untuk menghandle komentar, sampai nanti mendapatkan metode yang elegan, tidak akan ada kolom komentar di blog ini.&lt;/p&gt;</summary></entry><entry><title>Keyboard mekanikal</title><link href="http://kecebongsoft.com/2014/01/keyboard-mekanikal.html" rel="alternate"></link><updated>2014-01-13T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-01-13:2014/01/keyboard-mekanikal.html</id><summary type="html">&lt;p&gt;Keyboard adalah salah satu peripheral yang saya anggap sangat penting, saya menghabiskan sebagian besar waktu saya di komputer &lt;a href="/2014/01/iterm2-dan-produktifitas.html"&gt;dengan menggunakan terminal&lt;/a&gt;, saya juga sudah membuat berbagai shortcuts di aplikasi iTerm2, vim, OSX, dll, semua agar tangan saya bisa tetap berada di &lt;a href="http://en.wikipedia.org/wiki/Touch_typing#Home_row"&gt;home rows&lt;/a&gt;, jadi rasanya aneh kalau saya belum pernah menulis tentang keyboard sebelum ini.&lt;/p&gt;
&lt;p&gt;Semasa kuliah, saya menganggap keyboard adalah sekedar kebutuhan yang esensial, dalam artian cukup sekedar punya agar bisa mengetik di komputer, saya sering heran dengan teman-teman kuliah yang menghabiskan uang untuk membeli gaming keyboard. Saya sendiri saat itu menggunakan &lt;a href="http://en.wikipedia.org/wiki/Keyboard_technology#Membrane_keyboard"&gt;keyboard chiclet&lt;/a&gt; yang biasa saja. Ketika mulai bekerja, saya disediakan sebuah PC dan &lt;a href="http://www.amazon.com/Dell-Enhanced-Black-Keyboard-SK-8115/dp/B00496FELQ"&gt;keyboard Dell&lt;/a&gt;. Berpindah dari chiclet style ke &lt;a href="http://en.wikipedia.org/wiki/Keyboard_technology#Dome-switch_keyboard"&gt;rubber dome&lt;/a&gt; seperti Dell, saya mulai merasakan perbedaan. Awalnya saya merasa tidak nyaman dengan keyboard Dell, kemudian saya membawa keyboard sendiri, setelah beberapa bulan dipakai, keyboard tersebut mulai rusak dan harus diganti. Saya mencoba mencari keyboard sejenis tapi &lt;em&gt;feel&lt;/em&gt; nya sudah jauh berbeda, akhirnya saya membiasakan diri dengan keyboard Dell.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Dell keyboard" src="/img/dell-keyboard.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;Setelah beberapa minggu dengan keyboard Dell, saya mulai terbiasa. Dari situ juga saya belajar tentang berbagai macam jenis keyboard, dan mulai tertarik untuk membeli keyboard yang lebih nyaman untuk dipakai programming. Salah satu yang saya temukan adalah Microsoft Natural 4000, &lt;a href="http://www.codinghorror.com/blog/2005/09/keyboarding-microsoft-natural-ergonomic-4000.html"&gt;dari Jeff Atwood&lt;/a&gt;. Saya sangat tertarik dengan keyboard tersebut, setelah beberapa minggu research, saya membeli dan menggunakan keyboard tersebut.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Microsoft Natural 4000" src="/img/microsoft-keyboard.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Layout splitnya yang cukup baru memaksa saya untuk memperbaiki gaya mengetik saya, sebelum ini saya tidak mengetik 10-jari dengan benar, dan melalui keyboard ini saya perlahan belajar menjadi &lt;a href="http://en.wikipedia.org/wiki/Touch_typing"&gt;touch typist&lt;/a&gt; yang baik dan benar. Meskipun keyboard dari Microsoft ini sangat ergonomis untuk dipakai, saya tidak berhenti untuk membaca artikel tentang keyboard, dan pada satu waktu saya mulai belajar tentang jenis keyboard yang lain, yaitu keyboard mekanikal. Secara garis besar keyboard mekanikal menggunakan &lt;a href="http://www.overclock.net/t/491752/mechanical-keyboard-guide"&gt;switch mekanik&lt;/a&gt;, berbeda dengan keyboard biasa yang menggunakan karet, ada banyak sekali jenis switch pada keyboard mekanikal, yang menyesuaikan dengan selera penggunanya. Secara kualitas dan tingkat kenyamanan, keyboard mekanikal jauh lebih baik dibanding yang biasa.&lt;/p&gt;
&lt;p&gt;Melihat banyaknya antusiasme orang pada keyboard mekanikal, saya juga tertarik untuk mencobanya. Concern saya pertama kali adalah harga keyboard mekanikal secara rata-rata diatas 1 juta, jauh lebih mahal dibanding keyboard biasa, dan juga lebih mahal dari keyboard Microsoft saya. Saya putuskan untuk memulai dari keyboard yang harganya entry-level, dengan switch yang sesuai untuk mengetik. Setelah research, saya memutuskan untuk membeli &lt;a href="http://www.razerzone.com/gaming-keyboards-keypads/razer-blackwidow-ultimate"&gt;Razer Blackwidow Ultimate&lt;/a&gt;, mekanikal keyboard dari Razer dengan switch Cherry MX Blue. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Razer Blackwidow Ultimate" src="/img/razer-keyboard.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Impresi pertama saya ketika menggunakan keyboard ini ialah: sangat nyaman untuk dipakai, build quality yang jauh diatas semua keyboard yang pernah saya pakai, serta suara feedback &lt;em&gt;'click'&lt;/em&gt; yang sangat menarik. Saya menggunakan keyboard ini untuk semua kebutuhan, dan saya juga membawa keyboard ini untuk dipakai dikantor,saya bisa mengetik jauh lebih cepat dan nyaman menggunakan keyboard ini. Namun pada satu waktu, saya mulai merasakan suara feedback dari switch Cherry MX Blue cukup tinggi dan jika saya mengetik lama, ini cukup mengganggu orang sekitar, apalagi suasana kantor saya yang relatif sepi, saya juga sebenarnya tidak terlalu &lt;em&gt;sreg&lt;/em&gt; dengan form factor keyboard ini, terlalu banyak tombol yang tidak saya pakai, desainnya yang jauh lebih mengarah ke gaming keyboard, serta warnanya yang hitam. Akhirnya saya membawa kembali Razer ke rumah, dan menggunakan Microsoft 4000 di Kantor.&lt;/p&gt;
&lt;p&gt;Pada saat itu saya belum berhasil mendapatkan keyboard yang sesuai, Microsoft 4000 yang nyaman tapi bukan mekanikal, dan Razer yang mekanikal tapi cukup bising. Saya melanjutkan pencarian mekanikal keyboard dengan jenis switch yang lain, hingga saat ini. &lt;/p&gt;
&lt;p&gt;Kemudian saya menemukan &lt;a href="http://elitekeyboards.com/products.php?sub=pfu_keyboards,hhkbpro2&amp;amp;pid=pdkb400w"&gt;Happy Hacking Keyboard Proffesional 2&lt;/a&gt;, yang ternyata adalah favorit banyak orang, termasuk para geek seperti &lt;a href="http://www.mechanicalkeyboardhq.com/images/richard-stallman-happy-hacking-keyboard-2.jpg"&gt;Richard Stallman&lt;/a&gt;, &lt;a href="http://www.mechanicalkeyboardhq.com/images/Bjarne-Stroustrup-happy-hacking-keyboard.jpg"&gt;Bjarne Stroutrup&lt;/a&gt;, &lt;a href="http://instagram.com/p/TSPjINmtO5/"&gt;Kenneth Reitz&lt;/a&gt;, dan banyak lagi. Berbeda dengan keyboard yang sering saya lihat, keyboard ini menggunakan &lt;a href="http://deskthority.net/wiki/Topre_switch"&gt;switch Topre&lt;/a&gt;, switch kombinasi full-mekanikal dan rubber dome, banyak yang berdebat tentang keabsahan keyboard ini sebagai sebuah mekanikal keyboard, namun dari semua review, saya belum pernah menemukan komplain tentang feel dari keyboard ini, rata-rata review mengatakan keyboard ini sangat nyaman digunakan, punya tactile feel yang sangat baik, serta tidak bising. Saya juga sangat menyukai form factornya, dengan desain putih, tanpa function keys, beberapa tombol yang di alih-fungsikan (seperti tombol CTRL pindah ke Caps Lock, dan Delete pindah ke atas Enter), keyboard ini juga punya 3 mode, untuk Windows, Mac dan Unix.&lt;/p&gt;
&lt;p&gt;&lt;img alt="happy hacking" src="/img/hhkb.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Ketika melihat keyboard ini, saya sudah bisa merasakan ini adalah keyboard yang ingin saya miliki. Namun harganya sendiri cukup tinggi, yaitu sekitar USD250. Saya sempat mengurungkan niat untuk membeli keyboard ini dikarenakan faktor harga. Dan sempat mencari keyboard yang lebih mirip (layout simple dengan switch yang tidak bising), kemudian menemukan &lt;a href="http://deskthority.net/news-reviews-f4/filco-majestouch-2-tenkeyless-t1088.html"&gt;Filco Majestouch Tenkeyless&lt;/a&gt; yang menggunakan Cherry MX Brown, dengan harga sekitar setengah dari Happy Hacking Keyboard. Namun setelah difikirkan, dengan keyboard yang akan saya pakai lebih dari 8 jam sehari, selama lebih dari 5 tahun, sebagai salah satu peripheral yang sangat penting, ada baiknya saya menabung untuk membeli HHKB daripada membeli keyboard lain hanya karena faktor harga.&lt;/p&gt;
&lt;p&gt;Satu hal yang menarik dari HHKB adalah, karena ini di produksi di Jepang oleh Fujitsu, banyak pembeli yang harus menggunakan reseller untuk mendapatkan keyboard ini, namun banyak reseller yang memasang harga tinggi untuk keyboard ini, sementara harga aslinya jauh lebih murah. Ini memungkinkan saya untuk mendapatkan keyboard ini dengan harga yang jauh lebih murah kalau saya bisa mendapatkan reseller yang tepat. &lt;/p&gt;
&lt;p&gt;Contohnya, keyboard ini dilabeli sehargs USD260 di &lt;a href="http://elitekeyboards.com/products.php?sub=pfu_keyboards,hhkbpro2&amp;amp;pid=pdkb400w"&gt;EliteKeyboards&lt;/a&gt;, sementara di reseller lain, seperti &lt;a href="http://whiterabbitexpress.com/happy-hacking-keyboard-profesional2/"&gt;WhiteRabbitExpress&lt;/a&gt;, hanya dihargai JPY17,816, atau sekitar USD170. Jika ditambahkan dengan biaya lain seperti ongkos kirim, total pembayaran tetap lebih murah ketimbang membeli di EliteKeyboards. Di WhiteRabbitExpress ada fitur request-quote untuk mendapatkan estimasi total harga. Saya menggunakan fitur ini beberapa hari yang lalu, dan pagi ini pendapatkan estimasi sekitar USD240 yang sudah termasuk dengan biaya kirim.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Quotation" src="/img/hhkb-quotation.png" /&gt;&lt;/p&gt;
&lt;p&gt;Pada akhirnya, dengan banyaknya review yang baik tentang HHKB, semoga ini adalah keyboard terakhir yang saya pakai. &lt;/p&gt;</summary></entry><entry><title>iTerm2 dan produktifitas</title><link href="http://kecebongsoft.com/2014/01/iterm2-dan-produktifitas.html" rel="alternate"></link><updated>2014-01-11T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-01-11:2014/01/iterm2-dan-produktifitas.html</id><summary type="html">&lt;p&gt;Saya salah satu pengguna berat keyboard shortcuts dan tiling windows untuk berbagai macam alasan, salah satunya adalah meningkatkan produktifitas. Sayangnya, karena resolusi layar yang hanya &amp;lt; 1080, tiling/window manager seperti &lt;a href="http://spectacleapp.com"&gt;spectacle&lt;/a&gt; atau &lt;a href="https://github.com/jigish/slate"&gt;slate&lt;/a&gt; tidak begitu berguna, tapi untuk terminal saya masih bisa mengatasinya dengan split panes. Sebagai pengguna berat terminal, saya selalu mengevaluasi terminal yang saya gunakan dalam hal kemudahan, performa, estetika dan ekstensibilitas.&lt;/p&gt;
&lt;p&gt;Sekitar setahun yang lalu, ketika saya masih pakai Ubuntu, saya menggunakan tmux setiap harinya sebagai terminal multiplexer, dan memang sebagian besar waktu saya di depan komputer dihabiskan oleh terminal, baik itu coding, file/server management, dll. Pada saat itu tmux benar-benar terasa manfaat dan ekstensibilitasnya. Namun seiring waktu ada beberapa hal yang cukup membuat saya frustasi:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Tampilan tab yang kurang menarik&lt;/em&gt;: Seringkali saya merasa terganggu ketika menggunakan multiple tab di tmux, tampilan tabnya tidak estatik (well, ubuntu sendiri native tabnya juga tidak begitu bagus). Tidak seperti orang lain yang mengganggap estetika tools tidak terlalu penting, bagi saya ini memberikan efek kenyamanan ketika menggunakan tools tersebut.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Degradasi performa&lt;/em&gt;: Saya adalah pengguna berat split panes, dengan kebanyakan monitor wide-screens seperti sekarang, terminal dengan hanya satu pane membuat space menjadi mubazir. Masalahnya di tmux adalah ketika banyak pane yang dibuka dan berbagai verbose text mulai muncul, performanya mulai menurun, ini semakin buruk ketika saya menggunakan vim, saya harus mematikan beberapa config di vim hanya supaya terminal menjadi lebih cepat. Dan itupun masih dibawah harapan. Ini bukan murni salah tmux, dan dari hasil diskusi di stackexchange memang kesimpulannya &lt;a href="http://unix.stackexchange.com/questions/41225/can-a-terminal-emulator-be-as-fast-as-tty-1-6"&gt;terminal emulator berjalan diatas OS seperti ubuntu tidak secepat terminal emulator yang lebih simple&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Clipboard yang buruk&lt;/em&gt;: Ya, banyak sekali artikel tentang setting clipboard tmux di internet, tapi jarang saya temukan sebuah setting yang langsung bisa digunakan pertama kali menginstall tmux. Sulit membuat tmux harmonis dengan native clipboard tanpa menggunakan tools tertentu.&lt;/p&gt;
&lt;h2&gt;Berpindah ke iTerm2&lt;/h2&gt;
&lt;p&gt;Ketika mulai menggunakan OSX, saya mulai berpindah ke iTerm2, aplikasi terminal tersohor di OSX, sejauh ini iTerm2 sangat nyaman digunakan, dan berhasil menutupi semua kekurangan yang saya tulis diatas. Tampilan tab sudah diganti dengan native OSX tab, kemudian performa sudah jauh lebih baik karena split pane yang ada di iTerm2 adalah terminal yang benar-benar berbeda, bukan emulasi dengan operasi blit. Juga clipboard sudah jauh lebih baik disini, meskipun belum sempurna.&lt;/p&gt;
&lt;p&gt;Salah satu fitur iTerm2 (dengan kontribusi oleh OSX) adalah ketika full screen, tab pane akan disembunyikan dan hanya akan muncul ketika kita menekan tombol command selama beberapa detik, berpindah antar tab bisa dilakukan tanpa harus memunculnya tab pane.&lt;/p&gt;
&lt;p&gt;Fitur lainnya yang saya sangat suka di iTerm2 adalah kita bisa me-resize pane dengan mudah, tanpa shortcut, ini mungkin bertolak belakang dengan pola saya menggunakan komputer yang hampir selalu dengan shortcuts, namun dalam resize pane/windows bukan hal yang sering saya gunakan dan saya lebih suka tidak mengingat shortcuts yang jarang digunakan.&lt;/p&gt;
&lt;p&gt;Sekedar sharing, di iTerm2 saya menggunakan theme &lt;a href="http://color.smyck.org/"&gt;symck&lt;/a&gt;, mengaktifkan dimming antar pane. Saya juga menambahkan shortcut command+(h/j/k/l) untuk berpindah antara split pane. Karena default shortcut untuk swith pane di iTerm2 sangat tidak nyaman.&lt;/p&gt;</summary></entry><entry><title>Google Account Switcher</title><link href="http://kecebongsoft.com/2014/01/google-account-switcher.html" rel="alternate"></link><updated>2014-01-06T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-01-06:2014/01/google-account-switcher.html</id><summary type="html">&lt;p&gt;Saya sudah bertahun-tahun menggunakan email, bagi saya email adalah salah satu medium paling efektif untuk berkomunikasi. Sudah berbagai macam layanan email yang saya gunakan. Saya masih ingat email pertama saya ada di plasa.com, Yahoo!-nya indonesia di tahun 2000an dulu. Kemudian berpindah ke Yahoo!, Hotmail, dan banyak lagi, sampai akhirnya berhenti di Gmail.&lt;/p&gt;
&lt;p&gt;Gmail bagi saya (dan banyak orang) adalah salah satu layanan email terbaik saat ini, dan untung saja kantor saya juga menggunakan Google Apps sehingga saya bisa menggunakan fitur multiple accounts-nya Google. Fitur ini memungkinkan kita untuk punya beberapa account Google dan berpindah account tanpa harus log-out.&lt;/p&gt;
&lt;p&gt;Kantor saya menggunakan berbagai macam layanan Google selain GMail, dan account switcher ini terasa sekali manfaatnya karna saya bisa melihat inbox personal dan kantor tanpa harus menggunakan browser/session berbeda. Masalahnya adalah tidak semua layanan Google menyediakan fitur ini (secara jelas). &lt;/p&gt;
&lt;p&gt;Contohnya adalah Google Sites, tempat dimana kita bisa membuat halaman statik web. Ketika ingin memanage sebuah Site atas account yg lain, saya dihadapkan dengan sebuah login form yang pada dasarnya menyuruh saya logout.&lt;/p&gt;
&lt;p&gt;Ternyata ada trik sederhana melakukan switch account disini tanpa harus logout. Pertama, di Gmail, URL yang ditampilkan memiliki &lt;code&gt;/u/0/&lt;/code&gt; di satu account, dan memiliki &lt;code&gt;/u/1/&lt;/code&gt; di account lainnya, yang kedua, di login url sites.google.com ada parameter  &lt;code&gt;authuser&lt;/code&gt; yang sama dengan pola tersebut, kita hanya perlu menggantinya dari &lt;code&gt;0&lt;/code&gt; ke &lt;code&gt;1&lt;/code&gt;, maka halaman akan redirect ke  account yang sesuai..&lt;/p&gt;</summary></entry><entry><title>Pendengaran Pulih</title><link href="http://kecebongsoft.com/2014/01/pendengaran-pulih.html" rel="alternate"></link><updated>2014-01-02T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2014-01-02:2014/01/pendengaran-pulih.html</id><summary type="html">&lt;p&gt;Setelah hampir 5 hari, akhirnya &lt;a href='http://kecebongsoft.com/2013/12/pendengaran-berkurang.html'&gt;pendengaran saya kembali normal&lt;/a&gt;. Dalam lima hari, efek psikologisnya ternyata lebih besar dibanding kondisi badan. Saya menjadi kurang fokus dan kurang produktif dalam berbagai hal, seringkali ketika berjalan, saya merasa setengah tidur. Saya juga terkadang jadi lebih sensitif terhadap cara orang lain berbicara.&lt;/p&gt;
&lt;p&gt;5 hari tanpa pendengaran yang normal adalah salah satu penyakit yang memberikan saya pengalaman cukup unik, kini saya bisa tahu lebih tentang orang-orang yang merasakan hal yang sama.&lt;/p&gt;</summary></entry><entry><title>Kaleidoskop 2013</title><link href="http://kecebongsoft.com/2013/12/kaleidoskop-2013.html" rel="alternate"></link><updated>2013-12-31T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2013-12-31:2013/12/kaleidoskop-2013.html</id><summary type="html">&lt;p&gt;Tahun 2013 tinggal tersisa 1 hari lagi. Sejujurnya, saya bukan tipe orang yang punya objektif disetiap pergantian tahun. Saya bahkan tidak peduli dengan resolusi pergantian tahun. Saya lebih suka berfikir perubahan harus dilakukan tanpa menunggu momen apapun.&lt;/p&gt;
&lt;p&gt;Jadi ditulisan ini, daripada saya berfikir resolusi setahun kedepan, saya ingin merangkum pencapaian penting yang saya gapai tahun ini:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pekerjaan yang stabil&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Saya tidak bekerja diperusahaan top dunia, tapi tahun ini, mengikuti tahun-tahun sebelumnya, pekerjaan saya di sebuah startup company semakin stabil dan di tempat ini banyak sekali ilmu yang saya dapatkan, yang rasanya sangat sulit didapatkan di perusahaan yang lebih stabil dan lebih “berhati-hati”.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Setup workspace yang mulai solid&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sepanjang perjalanan saya menggunakan komputer, selalu saja saya memimpikan mempunyai mesin dan setup yang bisa bertahan lama. Mulai dari jenis komputer, OS, serta furniturenya, sudah berbagai macam PC dan laptop yang saya coba, tahun ini satu persatu saya sudah bisa menentukan setup seperti apa yang akan saya pakai dalam masa 5-6 tahun kedepan, beberapa sudah dimiliki.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Menikah&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ketika pertama kali kami menjalin komitmen dimasa kuliah (tahun 2009), saya sudah bertekad tidak akan main-main. Tapi menikah ditahun 2013 adalah salah satu yang paling tidak saya sangka. Tentu saja ada fikiran ke arah sana, tapi langkah konkritnya pun belum saya jalankan hingga pertengahan tahun. Banyak hal yang terfikir, pada akhirnya saya memantapkan niat dan Alhamdulillah, dan sekarang saya semakin yakin bahwa ini salah satu keputusan terbaik yang saya ambil tahun ini.&lt;/p&gt;
&lt;p&gt;Banyak sekali hal lain yang membuat saya sangat bersyukur ditahun ini, disisi lain - seperti hal nya manusia biasa, saya masih belum merasa puas. Semoga dimasa akan datang lebih banyak lagi pencapaian yang diraih.&lt;/p&gt;</summary></entry><entry><title>Pendengaran Berkurang</title><link href="http://kecebongsoft.com/2013/12/pendengaran-berkurang.html" rel="alternate"></link><updated>2013-12-30T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2013-12-30:2013/12/pendengaran-berkurang.html</id><summary type="html">&lt;p&gt;Saya belum pernah merasakan menjadi orang berumur, yang kualitas pendengarannya mulai berkurang. Saya kadang berfikir tentang dampak psikologis yang dirasakan ketika salah satu indera kita berkurang kualitasnya. Kali ini saya dapat kesempatan tersebut.&lt;/p&gt;
&lt;p&gt;Akhir minggu kemarin setelah pergi berenang, ada semacam kotoran luar yang menyumbat kanal telinga saya, membuat pendengaran saya berkurang sekitar 40-60%, awalnya saya pikir bisa dihilangkan dengan air atau cotton bath. Tapi setelah berjam-jam mencoba, tidak hilang juga dan saya mulai takut. Setelah 2 hari menunggu, hari ini saya konsultasikan ke dokter dan diberi estimasi 5 hari untuk sembuh dengan obat yang diberikan.&lt;/p&gt;
&lt;p&gt;Beberapa hari berjalan dengan pendengaran yang berkurang, banyak perbedaan yang saya rasakan. Saya harus jauh lebih menyimak ketika orang lain berbicara, terkadang ada orang yang tersinggung karena saya tidak mendengar apa perkataan mereka, kemudian saya pun jadi ikut tersinggung.&lt;/p&gt;
&lt;p&gt;Saya juga gemar mendengarkan musik ketika bekerja, kualitas musik yang saya dengarkan melalui earphone jauh berkurang. Untungnya tidak ada indikasi penyakit lainnya (demam, dll). Saya masih bisa beraktifitas seperti biasa, hanya saja dengan pendengaran yang berkurang.&lt;/p&gt;
&lt;p&gt;Satu hal yang saya rasakan, dengan pendengaran yang berkurang, saya secara tidak sadar menjadi lebih fokus pada apapun yang saya kerjakan, lebih sedikit merasakan bising, dan lebih tenang (tidak ada perasaan gemetar tanpa sadar seperti biasanya). Cukup unik.&lt;/p&gt;
&lt;p&gt;Setidaknya saya belajar satu dua hal, terutama menghargai orang-orang yang berbeda dengan saya secara general, dan mereka yang sudah berumur.&lt;/p&gt;
&lt;p&gt;Semoga tidak berlangsung lama agar bisa 100% fit kembali.&lt;/p&gt;</summary></entry><entry><title>Passwords</title><link href="http://kecebongsoft.com/2012/11/passwords.html" rel="alternate"></link><updated>2012-11-21T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2012-11-21:2012/11/passwords.html</id><summary type="html">&lt;p&gt;Today I'm trying out &lt;a href='https://github.com/defunkt/gist'&gt;a command line interface for Github's Gist&lt;/a&gt;, it's written in Ruby, but I guess that's okay, for me, personally. No, I want to talk about something else that bothers me, before you can send your stuff to Gist, you have to tell the program which Github account you are using, this can be done by specifying your Github username, and your password, your raw, naked, password. &lt;/p&gt;
&lt;p&gt;I've encounreted this kind of thing before, I think it was some CLI twitter client, asking me for a raw password. Honestly, after all this time I was using stuff like PGP keys and access_token, having to store my raw password somewhere in my computer doesn't seem convenient, even if no one else uses this computer other than me.&lt;/p&gt;
&lt;p&gt;Few questions came accross my mind, why can't we use stuff like access_token? It's safer, I can remove the token without harming my account, people don't get a single chance to see my raw passwords (or even seeing how I pattern my password), or can we even use things like PGP keys? Can I somehow 'upload' my public key into these services and have my private keys with me?. This would be really neat.&lt;/p&gt;
&lt;p&gt;I'm not an anti-password kinda guy, I'm completely fine using password, but of course when they are all in better places, like websites. Anyway, in the end I didn't use Gist-cli, it was a very interesting project, but the fact that I have to put my raw password in my client is just a big no, they do provide a way to hash the password, it's just I don't really know if that's the way I want it to be, maybe next time.&lt;/p&gt;</summary></entry><entry><title>Places</title><link href="http://kecebongsoft.com/2012/11/places.html" rel="alternate"></link><updated>2012-11-20T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2012-11-20:2012/11/places.html</id><summary type="html">&lt;p&gt;A bit ambiguous, eh?. This time around I will talk about how I was struggled with choosing the &lt;em&gt;right&lt;/em&gt; hosting for this blog, I spent almost an entire week finding out which host can serve my way of blogging: static sites, manage-able with repository, and pushing the updates with commits / rysnc style.&lt;/p&gt;
&lt;p&gt;As you might already know, this blog is powered by Pelican, a static blog engine written in Python, which making it possible to be hosted &lt;em&gt;almost&lt;/em&gt; anywhere, my consideration is of course scalability and reliability. I wanted to host it in places that I don't need to think about scaling, so one obvious place in my mind would be &lt;a href='https://pages.github.com'&gt;Github User Pages&lt;/a&gt; where it allows you to put static HTML files in the root of &lt;code&gt;username.github.com&lt;/code&gt; repository and it will serve the static site for you, dead simple. But I've encountered a single big problem I was never able to solve (&lt;em&gt;yet&lt;/em&gt;): after few days with several commits, it stopped building, I kept seeing the old version of the static site. I was able to trigger the build by removing the repository, create a new one and push the whole thing again, not a fancy solution. I checked out Twitter to see if anyone else got the same problem, and found them. I also contacted Github to see what they can say, but no words yet. I have to find another host.&lt;/p&gt;
&lt;p&gt;Now, we're still talking about scalability and reliability, at this time, I have an Amazon AWS account, and they provide a CDN service, I was thinking that a static site would be a great match when hosted at a CDN. So I set up an S3 bucket, use &lt;a href='https://github.com/seedifferently/boto_rsync'&gt;boto-rsync&lt;/a&gt; to sync my build folder into my S3 bucket, set the bucket settings into what they called as &lt;code&gt;website-mode&lt;/code&gt; and set my DNS to my S3 DNS. It turned out that the domain name has to match the bucket name, I was using different bucket name, and for some &lt;em&gt;personal&lt;/em&gt; reason, I can't change my bucket name. I had to use CloudFront.&lt;/p&gt;
&lt;p&gt;While S3 is a simple storage service, hosting your files in a specific region, CloudFront is a CDN service to propagate your S3 contents to several edge locations around the globe. I set up a CloudFront distribution, set the default root object to &lt;em&gt;index.html&lt;/em&gt; so when people hit &lt;em&gt;kecebongsoft.com&lt;/em&gt; the file will be served, and updated my DNS, things worked fine, until I realize that it cannot serve a sub-site. I have some sub-sites containing my HTML5 slides, in a folder such as &lt;em&gt;slide-blahblah&lt;/em&gt;, now if people hit &lt;em&gt;kecebongsoft.com/slide-blahblah&lt;/em&gt;, they'll get an &lt;em&gt;Access Denied&lt;/em&gt; message, that's because there is no such thing as default object in the subfolder, people will have to hit &lt;em&gt;kecebongsoft.com/slide-blahblah/index.html&lt;/em&gt; in order to see the actual content, at this point, I was a bit upset, I looked around and can't find anyone who was able to work around this.&lt;/p&gt;
&lt;p&gt;I should set my target a bit lower now, let's just start to think no one cares about my blog, well maybe just a couple of people, so for now I'll just host it in my shared-cloud account, WebFaction. It's really straight forward compared to the other two, I just need to create a site in the Control Panel and rsync my build path into the remote server, that is all, but I sacrificed the scalability, for now it only live in Singapore region, which at this time, should be just okay.&lt;/p&gt;
&lt;p&gt;I'm really hoping that I could go back using Github User Pages. If the guy contact me back and solves the problem, it will be a home-call, I liked the User Pages mechanism in a way that you only have to push to the master branch to trigger the build, now if only it works well all the time..&lt;/p&gt;</summary></entry><entry><title>Managing SSH keys</title><link href="http://kecebongsoft.com/2012/11/managing-ssh-keys.html" rel="alternate"></link><updated>2012-11-17T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2012-11-17:2012/11/managing-ssh-keys.html</id><summary type="html">&lt;p&gt;All this time, I've been managing my own SSH keys pretty badly, at least that's how I see it. I have different SSH key for different machine, some with passphrase, others without. &lt;/p&gt;
&lt;p&gt;Whether this is good or not, I believe it remains debatable. Having different SSH keys per machine will make you somehow safe in terms of not having to pass around your private key and storing it in place like Dropbox, you also don't really have to set a passphrase since the possibility of somebody remotely steal your private keys is highly unlikely. But in many ways I think it's inconvenient, in my case, I have to add those new keys to places like Github and Bitbucket everytime I generate them. They will stack up together in time, say in six months, I can't really remember which keys I'm still using, some might be dead already, Especially if you work on sandboxes like Vagrant &amp;amp; VirtualBox for development.&lt;/p&gt;
&lt;p&gt;Well, today I decided to remove all those keys, generate a new &lt;em&gt;global&lt;/em&gt; SSH key, set a very strong passphrase, and store it in my cloud storage (hint: it's not dropbox). It's really not that complex, the additional part is just putting it in a cloud storage, hell, you can even put it in a password-protected archive if you're super paranoid.&lt;/p&gt;
&lt;p&gt;One thing I learned was that you can freely change the user and hostname in your public key in case you don't like it, or in case the host name is too specific / ugly.&lt;/p&gt;
&lt;p&gt;But there are risks, for example, if I can't access my cloud storage, or if somebody else have access to it. In that case, there are few things I can do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Put a very strong passphrase on the private key, if they have access to your private key, nothing they can do with it.&lt;/li&gt;
&lt;li&gt;Set a very strong password, and multiple-level authentication system on the cloud storage if provided.&lt;/li&gt;
&lt;li&gt;Put the SSH public and private keys in a password-protected archive.&lt;/li&gt;
&lt;li&gt;If shit already happened, delete the public key immediately from places like code hostings, and then delete it from servers since they might not be so popular to get noticed compared to Github, for example.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So from today onwards, there shouldn't be any problem with managing SSH keys, or I can safely say I don't have to do it anymore. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Update: When using shared private key like this, you'll have to run &lt;code&gt;ssh-add&lt;/code&gt; after you add the private key in a another machine, if you've set a passphrase, it will ask you for it, enter it and you should be good to go&lt;/em&gt;&lt;/p&gt;</summary></entry><entry><title>My new Pelican build mechanics</title><link href="http://kecebongsoft.com/2012/11/my-new-pelican-build-mechanics.html" rel="alternate"></link><updated>2012-11-17T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2012-11-17:2012/11/my-new-pelican-build-mechanics.html</id><summary type="html">&lt;p&gt;As you know, my blog is powered by a python static blog engine, named Pelican. I really like it in many ways: simplicity, &lt;em&gt;geekyness&lt;/em&gt;, and hostings. Yes, hostings, this blog is hosted with the help of Github user pages, enabling you to create a static website through repository, and accessible with your Github username, plus you don't have to think about reliability and scaling, Github will handle it for you.&lt;/p&gt;
&lt;p&gt;Pelican, as a static blog engine, of course will generate static html files that you will have to push to your repository, these auto-generated files are pretty much meaningless, you don't want to 'manage' them, but it has to stay in the repo to serve request, and above that, it has to be placed in the root path of the repository. Meanwhile we also have some other files such as static files, the blog sources (posts, config file, build script, custom themes, etc), and in my case, I also have submodules repository which is a separate static site, they are mostly HTML5 slides.&lt;/p&gt;
&lt;p&gt;For me, I always wanted to keep everything clean, whenever I trigger a new build, I wanted to wipe all recent build files first. But I can't just do that with all other necessary files as mentioned, so few things need to be done before I trigger a build:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Exclude all git submodules path from deletion.&lt;/li&gt;
&lt;li&gt;Exclude files that are not part of pelican auto-generated files.&lt;/li&gt;
&lt;li&gt;Wipe the rest.&lt;/li&gt;
&lt;li&gt;Trigger the build.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While the last one is pretty much straightforward, the first three are quite tricky, but I finally figured it out with a bash script, note that I'm not a bash hacker, you might find my build script an eyesore, well, here it is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class="nv"&gt;GITMODULES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;grep path ../.gitmodules | sed &lt;span class="s1"&gt;&amp;#39;s/path = /\\\|/g&amp;#39;&lt;/span&gt; | sed &lt;span class="s1"&gt;&amp;#39;s/ //g&amp;#39;&lt;/span&gt; | sed &lt;span class="s1"&gt;&amp;#39;s/\t//g&amp;#39;&lt;/span&gt; | tr &lt;span class="s1"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt; | sed &lt;span class="s1"&gt;&amp;#39;s/#//g&amp;#39;&lt;/span&gt; | sed &lt;span class="s1"&gt;&amp;#39;s/^\\\|//g&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nv"&gt;FILES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;README\|pelican\|CNAME\|static&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;EXCEPTIONS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$GITMODULES&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\|&amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;$FILES&lt;/span&gt;
ls ../ | grep -v &lt;span class="nv"&gt;$EXCEPTIONS&lt;/span&gt; | xargs -i rm -rf ../&lt;span class="o"&gt;{}&lt;/span&gt;
&lt;span class="nb"&gt;source &lt;/span&gt;env/bin/activate
pelican . -o ../ -s pelican.conf.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First I grab all the submodules path and combine them together with a '\|' separator for regex purpose later, and manually list out all other excluded files with the same regex separator, and then use an inverse grep to delete the others. In my case, the manual list is really static and not always changed, so it will be safe to keep it this way, as for submodules, I have to make it dynamic to reduce the coupling.&lt;/p&gt;</summary></entry><entry><title>Optimizing I/O cost with provisioned IOPS</title><link href="http://kecebongsoft.com/2012/11/optimizing-io-cost-with-provisioned-iops.html" rel="alternate"></link><updated>2012-11-10T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2012-11-10:2012/11/optimizing-io-cost-with-provisioned-iops.html</id><summary type="html">&lt;p&gt;Recently I've been watching my monthly AWS bill and notice the I/O cost has been increased in the last few months. Note that at this point I've been receiving something around 220 million I/O request on my EBS volume. Earlier this week, Amazon Singapore did an introductory workshop nearby our office and introduces provisioned IOPS. I didn't really paid any attention to it, but it turned out really handy.&lt;/p&gt;
&lt;p&gt;IOPS, or IO per second, is a term coined by AWS to allow some resource in EBS volume in order to serve I/O requests, the more you have it, the more you can serve a request in a second. In AWS, there are two flavors of EBS, standard or provisioned, from the latter you will be able to set how many IOPS you want to have in a month, which is called as IOPS-month. 1 IOPS-month is equal to the number of seconds in a month, which is approximately 27 million second, or 27 million IOPS. When looking at my monthly I/O requests, which was 220 million, I can safely provision my IOPS to 100 IOPS which is something around 270 million IOPS per month, a bit higher and also safer in case of sudden peak.&lt;/p&gt;
&lt;p&gt;When using a standard I/O request, you will be charged something around 11 cents per 1 million request, and when using provisioned IOPS, you will be charged 11 cents per 1 IOPS-month, this will approximately save $10 a month for I/O requests. Pricing will depends on region, and provisioned storage will cost more for space, but the end cost is cheaper.&lt;/p&gt;
&lt;p&gt;So far, the only way to use this provisioned IOPS is by creating a new instance / launching new EBS volume, I haven't figured any way to switch my EBS volume to use a provisioned IOPS. For more info, see the EBS detail page in AWS (http://aws.amazon.com/ebs/).&lt;/p&gt;</summary><category term="AWS"></category></entry><entry><title>T-shirt New Relic</title><link href="http://kecebongsoft.com/2012/09/t-shirt-new-relic.html" rel="alternate"></link><updated>2012-09-28T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2012-09-28:2012/09/t-shirt-new-relic.html</id><summary type="html">&lt;p&gt;4 Minggu yang lalu New Relic ada promosi bagi setiap user baru yang ngedeploy, bakal dapet t-shirt "Data Nerd" gratis, syaratnya, harus register via Geekli.st. Karna saya udah punya account New Relic sebelum ini, jadi harus register account terpisah buat ngedapetin t-shirt nya, maruk yah :p. Anyway t-shirtnya udah datang:&lt;/p&gt;
&lt;p&gt;&lt;img src='/images/newrelic1.jpg' /&gt;
&lt;img src='/images/newrelic2.jpg' /&gt;
&lt;img src='/images/newrelic3.jpg' /&gt;
&lt;img src='/images/newrelic4.jpg' /&gt;
&lt;img src='/images/newrelic5.jpg' /&gt;&lt;/p&gt;</summary></entry><entry><title>72Solarized Theme</title><link href="http://kecebongsoft.com/2012/09/72solarized-theme.html" rel="alternate"></link><updated>2012-09-20T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2012-09-20:2012/09/72solarized-theme.html</id><summary type="html">&lt;p&gt;For the past few hours I've been trying to modify the default &lt;em&gt;notmyidea&lt;/em&gt;
theme that came from pelican to be more look alike my 
&lt;a href='http://kecebongsoft.tumblr.com'&gt;Tumblr blog&lt;/a&gt;. Why? Because
I love solarized, and simplicity.&lt;/p&gt;
&lt;p&gt;Why 72? I am planning to make this blog to use fixed with font with 72 
columns. Which will make it extremelly easy to read, and suits my &lt;em&gt;brief&lt;/em&gt;
blogging style.&lt;/p&gt;
&lt;p&gt;It turned out it wasn't that easy, especially I am a complete idiot in
web design. So this is all that was. I will try to improve as more posts
will be here. But at least it got the simplicity already.&lt;/p&gt;</summary></entry><entry><title>puppet-sentry</title><link href="http://kecebongsoft.com/2012/08/puppet-sentry.html" rel="alternate"></link><updated>2012-08-08T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2012-08-08:2012/08/puppet-sentry.html</id><summary type="html">&lt;p&gt;When I'm tasked to cast a new installation of sentry with puppet, I was
faced with problem that sentry need to interactively ask a superuser
creation when &lt;em&gt;syncdb&lt;/em&gt; is performed, which came from Django's. Fortunately.
in Django you can have initial predefined data that will be imported
when &lt;em&gt;syncdb&lt;/em&gt; is performed. By having a json formatted file in the root
project path and passing &lt;em&gt;--no-input&lt;/em&gt; in the command, Django will 
import the data and find the superuser information in the file.&lt;/p&gt;
&lt;p&gt;To make it easier for people, I created a puppet module to install 
sentry without having to interactively enter superuser information. 
Check it here: &lt;a href='http://github.com/kecebongsoft/puppet-sentry'&gt;
kecebongsoft/puppet-sentry&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Pemrograman Visual</title><link href="http://kecebongsoft.com/2012/08/pemrograman-visual.html" rel="alternate"></link><updated>2012-08-05T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2012-08-05:2012/08/pemrograman-visual.html</id><summary type="html">&lt;p&gt;Beberapa bulan lalu saya sering cerita via chat ama temen tentang tugas
kuliahnya di kampus *tiiiit*, beberapa kali dia mention  tentang tugas
mata kuliah Pemrograman Visual, setelah saya intip, cukup kaget karena
materinya tidak sesuai dengan judul mata kuliahnya. Kalau kalian lagi
ambil mata kuliah Pemrograman Visual dan diajarin VB atau Java, selamat,
kalian tersesat.&lt;/p&gt;
&lt;p&gt;Belakangan ini saya mulai terusik lagi dengan judul mata kuliah Pemrograman Visual. 
Sekarang saya pengen bahasa singkat aja (karna kalau diulas semua sumpah panjang 
banget) tentang salahnya dimana dan apa yang membedakan antara 
Pemrograman Visual dan yang bukan.&lt;/p&gt;
&lt;p&gt;Permasalahan utamanya adalah: Mata kuliah dengan judul Pemrograman 
Visual, tapi dengan materi bahasa pemrograman seperti Visual Basic dan
Java, digabungkan dengan software seperti Microsoft Visual Studio,
Eclipse dan NetBeans.&lt;/p&gt;
&lt;h2&gt;Bahasa-bahasa tersebut bukanlah bahasa pemrograman visual&lt;/h2&gt;
&lt;p&gt;Dalam desain bahasa pemrograman, ada satu bagian tentang studi semantik,
yaitu proses penterjemahan sebuah valid statement dari bahasa pemrograman 
menjadi sebuah computational model, ini terdiri dari banyak sekali parameter, 
salah satunya adalah struktur sintatik, dan dimensi. &lt;/p&gt;
&lt;p&gt;Jumlah dimensi inilah yang menentukan bahwa bahasa-bahasa seperti VB dan
teman-temannya adalah bukan bahasa pemrograman visual, melainkan &lt;em&gt;textual
programming language&lt;/em&gt;. Apa saja dimensi textual programming language?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dimensi horizontal, adalah semantic sebagai legal linear string, yang
  membentuk sebuah statement menjadi computational model&lt;/li&gt;
&lt;li&gt;Dimensi vertikal, adalah line continuation, baris ke 2 di kode
  biasanya diartikan sebagai baris selanjutnya setelah baris pertama, atau
  jalankan baris kedua setelah baris pertama&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dimensi vertikal meskipun salah satu bagian utama, tapi bukan bagian dari
semantik melainkan spatial relationship, atau flow/blok selanjutnya setelah
blok pertama (baris pertama).&lt;/p&gt;
&lt;h2&gt;Apa itu Pemrograman Visual?&lt;/h2&gt;
&lt;p&gt;VPL adalah bahasa pemrograman yang menggunakan banyak dimensi yang
visually expresive sebagai semantiknya. Expresi Visual bukan berarti
tombol-tombol di Microsoft Visual Basic untuk bikin textbox atau picture
box, tapi simbol-simbol yang menjelaskan tentang alur program, hubungan
antar entity, dan impact.&lt;/p&gt;
&lt;p&gt;Didalam VPL, saya bisa secara visual mendeklarasikan A dan B, lalu
menggabungkan keduanya dengan sebuah operator matematika, lalu melihat dampaknya
secara langsung, semua dalam bentuk diagram/simbol.&lt;/p&gt;
&lt;p&gt;Flowchart, UML Diagram, adalah contoh dari model sebuah VPL, dimensinya
adalah spatial relationship lewat penunjuk panah, atau time-based impact
seperti perubahan data sebelum dan sesudah.&lt;/p&gt;
&lt;h2&gt;Tapi kan, saya pakai Microsoft Visual Basic/Netbeans, bisa drag &amp;amp; drop, itu visual!&lt;/h2&gt;
&lt;p&gt;Software yang dipakai untuk 'drag &amp;amp; drop' itu adalah development environment,
nggak boleh disamakan dengan bahasa pemrogramannya, development environment
adalah software yang ngasih kita shortcut untuk melakukan task-task yang
umum seperti manage project, bikin GUI (Form/Tombol/Textbox/dll), bikin
build, dll, tapi dibelakang layar mereka ngehasilin kode yang kurang lebih
sama dengan kalau kita ngetik di teks editor biasa. Tampilan GUI yang dibuat
di software ini juga di simpan ke file teks manifest biasa.&lt;/p&gt;
&lt;p&gt;Ini yang namanya VPE (Visual Programming Environment), bahasa pemrograman
seperti Visual Basic dan Java punya Microsoft Visual Studio dan Netbeans
sebagai VPEnya, namun nggak diwajibkan harus pakai karena sifat textual
programming languagenya yang dengan semantik terbatas bisa dimanage
sebagai teks biasa dan bisa di compile terpisah.&lt;/p&gt;
&lt;p&gt;Sedangkan VPE untuk untuk Visual Programming Language (VPL) lebih bersifat
sebagai sebuah keharusan karna VPL sendiri sangat ekspresif dan sulit
untuk bekerja dengan VPL (dengan simbol dan sebagainya) tanpa menggunakan
software yang mensupport untuk membuat visually expressive syntax.&lt;/p&gt;
&lt;h2&gt;Tadi katanya Textual Programming itu berbentuk teks dan VPL berbentuk simbol, Jadi maksudnya VPL itu nggak boleh ada teks sama sekali?&lt;/h2&gt;
&lt;p&gt;Ini yang paling sering disalah artikan, TP dan VP itu yang membedakan adalah
semantik, bukan tentang teks atau tidak, VPL juga punya teks di beberapa
bagian sampai batas tertentu.&lt;/p&gt;
&lt;p&gt;Lalu kenapa ada VPL? Salah satu main goalnya adalah untuk nge-improve
language design yang sekarang konvensional seperti textual programming
language, masalah dengan textual programming language adalah sifatnya
yang restriktif sekali, nggak banyak ekspresi yang bisa kita lakukan
karena dibatasi oleh struktur sintaks &amp;amp; parse tree bahasa pemrograman
yang bersangkutan, sementara VPL punya lebih sedikit aturan, sehingga
result yang dihasilkan bisa bermacam-macam karena objek dan spatial
relationshipnya yang nggak terlalu restriktif.&lt;/p&gt;
&lt;h2&gt;Lalu apa efek negatifnya belajar Pemrograman Visual dengan materi yang salah?&lt;/h2&gt;
&lt;p&gt;Banyak sekali, ibaratkan dengan ikut les bahasa Korea tapi yang diajarkan
adalah bahasa Jepang. VPL kebanyakan bukanlah general-purpose-language,
sedangkan yang diajarkan (contoh:Java), adalah general-purpose-language,
VPL lebih domain spesifik seperti untuk edukasi, hardware, dan multimedia
seperti audio analyzer atau animation. Sedangkan bahasa seperti Java
punya fungsi/domain yang luas sekali. Ditambah lagi biasanya materi yang
diajarkan adalah tentang "Visual" yang salah, yaitu gimana cara membuat
program berbasis GUI, gimana caranya supaya waktu tombol A ditekan, keluar
gambar kucing lagi pakai topi semangka, dll. Ini bukan visual programming,
mempelajari membuat program berbasis GUI nggak akan ngajarin kita tentang
visual programming, dan bisa jadi tersesat lebih jauh, contoh: mengesampingkan
materi yang lebih penting ketimbang belajar GUI, seperti programming language
paradigm.&lt;/p&gt;
&lt;p&gt;Post ini cuma mau menekankan perbedaan mendasar dari textual-programming
language, dan VPL. Nggak ada contoh/screenshot karena pengennya dibahas
singkat aja tentang karakteristik utama masing2 jenis programming languagenya.&lt;/p&gt;
&lt;p&gt;Untuk paper yang ngebahas tentang VPL cukup lengkap, ada disini:
http://www.cs.auckland.ac.nz/courses/compsci732s1c/archive/2005/lectures/WhatIsVP.pdf&lt;/p&gt;</summary></entry><entry><title>Samarinda ada di posisi 6 worldwide-Julython 2012</title><link href="http://kecebongsoft.com/2012/07/samarinda-ada-di-posisi-6-worldwide-julython-2012.html" rel="alternate"></link><updated>2012-07-30T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2012-07-30:2012/07/samarinda-ada-di-posisi-6-worldwide-julython-2012.html</id><summary type="html">&lt;p&gt;Yup, saya ikutan Julython 2012, Julython adalah event sebulan penuh tentang
proyek open source berbasis python yang kita tulis sendiri, yang bikin
seneng adalah "Samarinda, Indonesia" ada di ranking ke 6 di page locations 
dari seluruh dunia (http://julython.org/location/), dan saya sekarang ada di 
posisi pertama di people page (http://julython.org/people/) :D,  Julython 2012 
akan berakhir beberapa hari lagi dan semoga posisi ini nggak turun :D.&lt;/p&gt;</summary></entry><entry><title>Extracting a subset of tar archive to a specific directory</title><link href="http://kecebongsoft.com/2012/07/extracting-a-subset-of-tar-archive-to-a-specific-directory.html" rel="alternate"></link><updated>2012-07-20T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2012-07-20:2012/07/extracting-a-subset-of-tar-archive-to-a-specific-directory.html</id><summary type="html">&lt;p&gt;I came across a task where I need to automatically download solr
package and extract the files in example/ directory to a specific 
folder so here's how it's done:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir -p /dest/path/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; tar -xf file.tar &lt;span class="nb"&gt;source&lt;/span&gt;/path --strip&lt;span class="o"&gt;=&lt;/span&gt;n
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will create a directory and extract a folder &lt;em&gt;source/path&lt;/em&gt; in the
file.tar. Notice that there's a &lt;em&gt;--strip=n--&lt;/em&gt;, this will let you 
skip the directory structure up to certain level from the root. So if I
want to extract the whole content of &lt;em&gt;source/path&lt;/em&gt; to &lt;em&gt;dest/path&lt;/em&gt; 
without recreating &lt;em&gt;source/path&lt;/em&gt; folder inside &lt;em&gt;dest/path&lt;/em&gt;, I can put
&lt;em&gt;--strip=2&lt;/em&gt; to the argument to skip directory &lt;em&gt;source/&lt;/em&gt; and 
&lt;em&gt;source/path&lt;/em&gt;&lt;/p&gt;</summary></entry><entry><title>.dotfiles</title><link href="http://kecebongsoft.com/2012/05/dotfiles.html" rel="alternate"></link><updated>2012-05-10T00:00:00+08:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.com,2012-05-10:2012/05/dotfiles.html</id><summary type="html">&lt;p&gt;I once maintain my own vimfiles repository, but vim plugins are now easier to manage using vundle and I realize it's time to only rely on my .vimrc without anything else (not .vim, not plugins, etc). So I created a &lt;a href="https://github.com/kecebongsoft/dotfiles"&gt;new repository&lt;/a&gt; and put all my dotfiles there, add some submodules and setup script to make it easy, oh, and I removed my vimfiles as well.&lt;/p&gt;</summary></entry></feed>