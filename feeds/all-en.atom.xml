<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dedi Purwanto</title><link href="http://kecebongsoft.github.io/" rel="alternate"></link><link href="http://kecebongsoft.com/feeds/all-en.atom.xml" rel="self"></link><id>http://kecebongsoft.github.io/</id><updated>2014-01-06T00:00:00+01:00</updated><entry><title>Google Account Switcher</title><link href="http://kecebongsoft.github.io/2014/01/google-account-switcher.html" rel="alternate"></link><updated>2014-01-06T00:00:00+01:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2014-01-06:2014/01/google-account-switcher.html</id><summary type="html">&lt;p&gt;Saya sudah bertahun-tahun menggunakan email, bagi saya email adalah salah satu medium paling efektif untuk berkomunikasi. Sudah berbagai macam layanan email yang saya gunakan. Saya masih ingat email pertama saya ada di plasa.com, Yahoo!-nya indonesia di tahun 2000an dulu. Kemudian berpindah ke Yahoo!, Hotmail, dan banyak lagi, sampai akhirnya berhenti di Gmail.&lt;/p&gt;
&lt;p&gt;Gmail bagi saya (dan banyak orang) adalah salah satu layanan email terbaik saat ini, dan untung saja kantor saya juga menggunakan Google Apps sehingga saya bisa menggunakan fitur multiple accounts-nya Google. Fitur ini memungkinkan kita untuk punya beberapa account Google dan berpindah account tanpa harus log-out.&lt;/p&gt;
&lt;p&gt;Kantor saya menggunakan berbagai macam layanan Google selain GMail, dan account switcher ini terasa sekali manfaatnya karna saya bisa melihat inbox personal dan kantor tanpa harus menggunakan browser/session berbeda. Masalahnya adalah tidak semua layanan Google menyediakan fitur ini (secara jelas). &lt;/p&gt;
&lt;p&gt;Contohnya adalah Google Sites, tempat dimana kita bisa membuat halaman statik web. Ketika ingin memanage sebuah Site atas account yg lain, saya dihadapkan dengan sebuah login form yang pada dasarnya menyuruh saya logout.&lt;/p&gt;
&lt;p&gt;Ternyata ada trik sederhana melakukan switch account disini tanpa harus logout. Pertama, di Gmail, URL yang ditampilkan memiliki &lt;code&gt;/u/0/&lt;/code&gt; di satu account, dan memiliki &lt;code&gt;/u/1/&lt;/code&gt; di account lainnya, yang kedua, di login url sites.google.com ada parameter  &lt;code&gt;authuser&lt;/code&gt; yang sama dengan pola tersebut, kita hanya perlu menggantinya dari &lt;code&gt;0&lt;/code&gt; ke &lt;code&gt;1&lt;/code&gt;, maka halaman akan redirect ke  account yang sesuai..&lt;/p&gt;</summary></entry><entry><title>Pendengaran Pulih</title><link href="http://kecebongsoft.github.io/2014/01/pendengaran-pulih.html" rel="alternate"></link><updated>2014-01-02T00:00:00+01:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2014-01-02:2014/01/pendengaran-pulih.html</id><summary type="html">&lt;p&gt;Setelah hampir 5 hari, akhirnya &lt;a href='http://kecebongsoft.github.io/2013/12/pendengaran-berkurang.html'&gt;pendengaran saya kembali normal&lt;/a&gt;. Dalam lima hari, efek psikologisnya ternyata lebih besar dibanding kondisi badan. Saya menjadi kurang fokus dan kurang produktif dalam berbagai hal, seringkali ketika berjalan, saya merasa setengah tidur. Saya juga terkadang jadi lebih sensitif terhadap cara orang lain berbicara.&lt;/p&gt;
&lt;p&gt;5 hari tanpa pendengaran yang normal adalah salah satu penyakit yang memberikan saya pengalaman cukup unik, kini saya bisa tahu lebih tentang orang-orang yang merasakan hal yang sama.&lt;/p&gt;</summary></entry><entry><title>Kaleidoskop 2013</title><link href="http://kecebongsoft.github.io/2013/12/kaleidoskop-2013.html" rel="alternate"></link><updated>2013-12-31T00:00:00+01:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2013-12-31:2013/12/kaleidoskop-2013.html</id><summary type="html">&lt;p&gt;Tahun 2013 tinggal tersisa 1 hari lagi. Sejujurnya, saya bukan tipe orang yang punya objektif disetiap pergantian tahun. Saya bahkan tidak peduli dengan resolusi pergantian tahun. Saya lebih suka berfikir perubahan harus dilakukan tanpa menunggu momen apapun.&lt;/p&gt;
&lt;p&gt;Jadi ditulisan ini, daripada saya berfikir resolusi setahun kedepan, saya ingin merangkum pencapaian penting yang saya gapai tahun ini:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pekerjaan yang stabil&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Saya tidak bekerja diperusahaan top dunia, tapi tahun ini, mengikuti tahun-tahun sebelumnya, pekerjaan saya di sebuah startup company semakin stabil dan di tempat ini banyak sekali ilmu yang saya dapatkan, yang rasanya sangat sulit didapatkan di perusahaan yang lebih stabil dan lebih “berhati-hati”.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Setup workspace yang mulai solid&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sepanjang perjalanan saya menggunakan komputer, selalu saja saya memimpikan mempunyai mesin dan setup yang bisa bertahan lama. Mulai dari jenis komputer, OS, serta furniturenya, sudah berbagai macam PC dan laptop yang saya coba, tahun ini satu persatu saya sudah bisa menentukan setup seperti apa yang akan saya pakai dalam masa 5-6 tahun kedepan, beberapa sudah dimiliki.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Menikah&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ketika pertama kali kami menjalin komitmen dimasa kuliah (tahun 2009), saya sudah bertekad tidak akan main-main. Tapi menikah ditahun 2013 adalah salah satu yang paling tidak saya sangka. Tentu saja ada fikiran ke arah sana, tapi langkah konkritnya pun belum saya jalankan hingga pertengahan tahun. Banyak hal yang terfikir, pada akhirnya saya memantapkan niat dan Alhamdulillah, dan sekarang saya semakin yakin bahwa ini salah satu keputusan terbaik yang saya ambil tahun ini.&lt;/p&gt;
&lt;p&gt;Banyak sekali hal lain yang membuat saya sangat bersyukur ditahun ini, disisi lain - seperti hal nya manusia biasa, saya masih belum merasa puas. Semoga dimasa akan datang lebih banyak lagi pencapaian yang diraih.&lt;/p&gt;</summary></entry><entry><title>Pendengaran Berkurang</title><link href="http://kecebongsoft.github.io/2013/12/pendengaran-berkurang.html" rel="alternate"></link><updated>2013-12-30T00:00:00+01:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2013-12-30:2013/12/pendengaran-berkurang.html</id><summary type="html">&lt;p&gt;Saya belum pernah merasakan menjadi orang berumur, yang kualitas pendengarannya mulai berkurang. Saya kadang berfikir tentang dampak psikologis yang dirasakan ketika salah satu indera kita berkurang kualitasnya. Kali ini saya dapat kesempatan tersebut.&lt;/p&gt;
&lt;p&gt;Akhir minggu kemarin setelah pergi berenang, ada semacam kotoran luar yang menyumbat kanal telinga saya, membuat pendengaran saya berkurang sekitar 40-60%, awalnya saya pikir bisa dihilangkan dengan air atau cotton bath. Tapi setelah berjam-jam mencoba, tidak hilang juga dan saya mulai takut. Setelah 2 hari menunggu, hari ini saya konsultasikan ke dokter dan diberi estimasi 5 hari untuk sembuh dengan obat yang diberikan.&lt;/p&gt;
&lt;p&gt;Beberapa hari berjalan dengan pendengaran yang berkurang, banyak perbedaan yang saya rasakan. Saya harus jauh lebih menyimak ketika orang lain berbicara, terkadang ada orang yang tersinggung karena saya tidak mendengar apa perkataan mereka, kemudian saya pun jadi ikut tersinggung.&lt;/p&gt;
&lt;p&gt;Saya juga gemar mendengarkan musik ketika bekerja, kualitas musik yang saya dengarkan melalui earphone jauh berkurang. Untungnya tidak ada indikasi penyakit lainnya (demam, dll). Saya masih bisa beraktifitas seperti biasa, hanya saja dengan pendengaran yang berkurang.&lt;/p&gt;
&lt;p&gt;Satu hal yang saya rasakan, dengan pendengaran yang berkurang, saya secara tidak sadar menjadi lebih fokus pada apapun yang saya kerjakan, lebih sedikit merasakan bising, dan lebih tenang (tidak ada perasaan gemetar tanpa sadar seperti biasanya). Cukup unik.&lt;/p&gt;
&lt;p&gt;Setidaknya saya belajar satu dua hal, terutama menghargai orang-orang yang berbeda dengan saya secara general, dan mereka yang sudah berumur.&lt;/p&gt;
&lt;p&gt;Semoga tidak berlangsung lama agar bisa 100% fit kembali.&lt;/p&gt;</summary></entry><entry><title>Passwords</title><link href="http://kecebongsoft.github.io/2012/11/passwords.html" rel="alternate"></link><updated>2012-11-21T00:00:00+01:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2012-11-21:2012/11/passwords.html</id><summary type="html">&lt;p&gt;Today I'm trying out &lt;a href='https://github.com/defunkt/gist'&gt;a command line interface for Github's Gist&lt;/a&gt;, it's written in Ruby, but I guess that's okay, for me, personally. No, I want to talk about something else that bothers me, before you can send your stuff to Gist, you have to tell the program which Github account you are using, this can be done by specifying your Github username, and your password, your raw, naked, password. &lt;/p&gt;
&lt;p&gt;I've encounreted this kind of thing before, I think it was some CLI twitter client, asking me for a raw password. Honestly, after all this time I was using stuff like PGP keys and access_token, having to store my raw password somewhere in my computer doesn't seem convenient, even if no one else uses this computer other than me.&lt;/p&gt;
&lt;p&gt;Few questions came accross my mind, why can't we use stuff like access_token? It's safer, I can remove the token without harming my account, people don't get a single chance to see my raw passwords (or even seeing how I pattern my password), or can we even use things like PGP keys? Can I somehow 'upload' my public key into these services and have my private keys with me?. This would be really neat.&lt;/p&gt;
&lt;p&gt;I'm not an anti-password kinda guy, I'm completely fine using password, but of course when they are all in better places, like websites. Anyway, in the end I didn't use Gist-cli, it was a very interesting project, but the fact that I have to put my raw password in my client is just a big no, they do provide a way to hash the password, it's just I don't really know if that's the way I want it to be, maybe next time.&lt;/p&gt;</summary></entry><entry><title>Places</title><link href="http://kecebongsoft.github.io/2012/11/places.html" rel="alternate"></link><updated>2012-11-20T00:00:00+01:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2012-11-20:2012/11/places.html</id><summary type="html">&lt;p&gt;A bit ambiguous, eh?. This time around I will talk about how I was struggled with choosing the &lt;em&gt;right&lt;/em&gt; hosting for this blog, I spent almost an entire week finding out which host can serve my way of blogging: static sites, manage-able with repository, and pushing the updates with commits / rysnc style.&lt;/p&gt;
&lt;p&gt;As you might already know, this blog is powered by Pelican, a static blog engine written in Python, which making it possible to be hosted &lt;em&gt;almost&lt;/em&gt; anywhere, my consideration is of course scalability and reliability. I wanted to host it in places that I don't need to think about scaling, so one obvious place in my mind would be &lt;a href='https://pages.github.com'&gt;Github User Pages&lt;/a&gt; where it allows you to put static HTML files in the root of &lt;code&gt;username.github.com&lt;/code&gt; repository and it will serve the static site for you, dead simple. But I've encountered a single big problem I was never able to solve (&lt;em&gt;yet&lt;/em&gt;): after few days with several commits, it stopped building, I kept seeing the old version of the static site. I was able to trigger the build by removing the repository, create a new one and push the whole thing again, not a fancy solution. I checked out Twitter to see if anyone else got the same problem, and found them. I also contacted Github to see what they can say, but no words yet. I have to find another host.&lt;/p&gt;
&lt;p&gt;Now, we're still talking about scalability and reliability, at this time, I have an Amazon AWS account, and they provide a CDN service, I was thinking that a static site would be a great match when hosted at a CDN. So I set up an S3 bucket, use &lt;a href='https://github.com/seedifferently/boto_rsync'&gt;boto-rsync&lt;/a&gt; to sync my build folder into my S3 bucket, set the bucket settings into what they called as &lt;code&gt;website-mode&lt;/code&gt; and set my DNS to my S3 DNS. It turned out that the domain name has to match the bucket name, I was using different bucket name, and for some &lt;em&gt;personal&lt;/em&gt; reason, I can't change my bucket name. I had to use CloudFront.&lt;/p&gt;
&lt;p&gt;While S3 is a simple storage service, hosting your files in a specific region, CloudFront is a CDN service to propagate your S3 contents to several edge locations around the globe. I set up a CloudFront distribution, set the default root object to &lt;em&gt;index.html&lt;/em&gt; so when people hit &lt;em&gt;kecebongsoft.com&lt;/em&gt; the file will be served, and updated my DNS, things worked fine, until I realize that it cannot serve a sub-site. I have some sub-sites containing my HTML5 slides, in a folder such as &lt;em&gt;slide-blahblah&lt;/em&gt;, now if people hit &lt;em&gt;kecebongsoft.com/slide-blahblah&lt;/em&gt;, they'll get an &lt;em&gt;Access Denied&lt;/em&gt; message, that's because there is no such thing as default object in the subfolder, people will have to hit &lt;em&gt;kecebongsoft.com/slide-blahblah/index.html&lt;/em&gt; in order to see the actual content, at this point, I was a bit upset, I looked around and can't find anyone who was able to work around this.&lt;/p&gt;
&lt;p&gt;I should set my target a bit lower now, let's just start to think no one cares about my blog, well maybe just a couple of people, so for now I'll just host it in my shared-cloud account, WebFaction. It's really straight forward compared to the other two, I just need to create a site in the Control Panel and rsync my build path into the remote server, that is all, but I sacrificed the scalability, for now it only live in Singapore region, which at this time, should be just okay.&lt;/p&gt;
&lt;p&gt;I'm really hoping that I could go back using Github User Pages. If the guy contact me back and solves the problem, it will be a home-call, I liked the User Pages mechanism in a way that you only have to push to the master branch to trigger the build, now if only it works well all the time..&lt;/p&gt;</summary></entry><entry><title>Managing SSH keys</title><link href="http://kecebongsoft.github.io/2012/11/managing-ssh-keys.html" rel="alternate"></link><updated>2012-11-17T00:00:00+01:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2012-11-17:2012/11/managing-ssh-keys.html</id><summary type="html">&lt;p&gt;All this time, I've been managing my own SSH keys pretty badly, at least that's how I see it. I have different SSH key for different machine, some with passphrase, others without. &lt;/p&gt;
&lt;p&gt;Whether this is good or not, I believe it remains debatable. Having different SSH keys per machine will make you somehow safe in terms of not having to pass around your private key and storing it in place like Dropbox, you also don't really have to set a passphrase since the possibility of somebody remotely steal your private keys is highly unlikely. But in many ways I think it's inconvenient, in my case, I have to add those new keys to places like Github and Bitbucket everytime I generate them. They will stack up together in time, say in six months, I can't really remember which keys I'm still using, some might be dead already, Especially if you work on sandboxes like Vagrant &amp;amp; VirtualBox for development.&lt;/p&gt;
&lt;p&gt;Well, today I decided to remove all those keys, generate a new &lt;em&gt;global&lt;/em&gt; SSH key, set a very strong passphrase, and store it in my cloud storage (hint: it's not dropbox). It's really not that complex, the additional part is just putting it in a cloud storage, hell, you can even put it in a password-protected archive if you're super paranoid.&lt;/p&gt;
&lt;p&gt;One thing I learned was that you can freely change the user and hostname in your public key in case you don't like it, or in case the host name is too specific / ugly.&lt;/p&gt;
&lt;p&gt;But there are risks, for example, if I can't access my cloud storage, or if somebody else have access to it. In that case, there are few things I can do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Put a very strong passphrase on the private key, if they have access to your private key, nothing they can do with it.&lt;/li&gt;
&lt;li&gt;Set a very strong password, and multiple-level authentication system on the cloud storage if provided.&lt;/li&gt;
&lt;li&gt;Put the SSH public and private keys in a password-protected archive.&lt;/li&gt;
&lt;li&gt;If shit already happened, delete the public key immediately from places like code hostings, and then delete it from servers since they might not be so popular to get noticed compared to Github, for example.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So from today onwards, there shouldn't be any problem with managing SSH keys, or I can safely say I don't have to do it anymore. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Update: When using shared private key like this, you'll have to run &lt;code&gt;ssh-add&lt;/code&gt; after you add the private key in a another machine, if you've set a passphrase, it will ask you for it, enter it and you should be good to go&lt;/em&gt;&lt;/p&gt;</summary></entry><entry><title>My new Pelican build mechanics</title><link href="http://kecebongsoft.github.io/2012/11/my-new-pelican-build-mechanics.html" rel="alternate"></link><updated>2012-11-17T00:00:00+01:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2012-11-17:2012/11/my-new-pelican-build-mechanics.html</id><summary type="html">&lt;p&gt;As you know, my blog is powered by a python static blog engine, named Pelican. I really like it in many ways: simplicity, &lt;em&gt;geekyness&lt;/em&gt;, and hostings. Yes, hostings, this blog is hosted with the help of Github user pages, enabling you to create a static website through repository, and accessible with your Github username, plus you don't have to think about reliability and scaling, Github will handle it for you.&lt;/p&gt;
&lt;p&gt;Pelican, as a static blog engine, of course will generate static html files that you will have to push to your repository, these auto-generated files are pretty much meaningless, you don't want to 'manage' them, but it has to stay in the repo to serve request, and above that, it has to be placed in the root path of the repository. Meanwhile we also have some other files such as static files, the blog sources (posts, config file, build script, custom themes, etc), and in my case, I also have submodules repository which is a separate static site, they are mostly HTML5 slides.&lt;/p&gt;
&lt;p&gt;For me, I always wanted to keep everything clean, whenever I trigger a new build, I wanted to wipe all recent build files first. But I can't just do that with all other necessary files as mentioned, so few things need to be done before I trigger a build:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Exclude all git submodules path from deletion.&lt;/li&gt;
&lt;li&gt;Exclude files that are not part of pelican auto-generated files.&lt;/li&gt;
&lt;li&gt;Wipe the rest.&lt;/li&gt;
&lt;li&gt;Trigger the build.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While the last one is pretty much straightforward, the first three are quite tricky, but I finally figured it out with a bash script, note that I'm not a bash hacker, you might find my build script an eyesore, well, here it is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class="nv"&gt;GITMODULES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;grep path ../.gitmodules | sed &lt;span class="s1"&gt;&amp;#39;s/path = /\\\|/g&amp;#39;&lt;/span&gt; | sed &lt;span class="s1"&gt;&amp;#39;s/ //g&amp;#39;&lt;/span&gt; | sed &lt;span class="s1"&gt;&amp;#39;s/\t//g&amp;#39;&lt;/span&gt; | tr &lt;span class="s1"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt; | sed &lt;span class="s1"&gt;&amp;#39;s/#//g&amp;#39;&lt;/span&gt; | sed &lt;span class="s1"&gt;&amp;#39;s/^\\\|//g&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nv"&gt;FILES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;README\|pelican\|CNAME\|static&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;EXCEPTIONS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$GITMODULES&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\|&amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;$FILES&lt;/span&gt;
ls ../ | grep -v &lt;span class="nv"&gt;$EXCEPTIONS&lt;/span&gt; | xargs -i rm -rf ../&lt;span class="o"&gt;{}&lt;/span&gt;
&lt;span class="nb"&gt;source &lt;/span&gt;env/bin/activate
pelican . -o ../ -s pelican.conf.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First I grab all the submodules path and combine them together with a '\|' separator for regex purpose later, and manually list out all other excluded files with the same regex separator, and then use an inverse grep to delete the others. In my case, the manual list is really static and not always changed, so it will be safe to keep it this way, as for submodules, I have to make it dynamic to reduce the coupling.&lt;/p&gt;</summary></entry><entry><title>Optimizing I/O cost with provisioned IOPS</title><link href="http://kecebongsoft.github.io/2012/11/optimizing-io-cost-with-provisioned-iops.html" rel="alternate"></link><updated>2012-11-10T00:00:00+01:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2012-11-10:2012/11/optimizing-io-cost-with-provisioned-iops.html</id><summary type="html">&lt;p&gt;Recently I've been watching my monthly AWS bill and notice the I/O cost has been increased in the last few months. Note that at this point I've been receiving something around 220 million I/O request on my EBS volume. Earlier this week, Amazon Singapore did an introductory workshop nearby our office and introduces provisioned IOPS. I didn't really paid any attention to it, but it turned out really handy.&lt;/p&gt;
&lt;p&gt;IOPS, or IO per second, is a term coined by AWS to allow some resource in EBS volume in order to serve I/O requests, the more you have it, the more you can serve a request in a second. In AWS, there are two flavors of EBS, standard or provisioned, from the latter you will be able to set how many IOPS you want to have in a month, which is called as IOPS-month. 1 IOPS-month is equal to the number of seconds in a month, which is approximately 27 million second, or 27 million IOPS. When looking at my monthly I/O requests, which was 220 million, I can safely provision my IOPS to 100 IOPS which is something around 270 million IOPS per month, a bit higher and also safer in case of sudden peak.&lt;/p&gt;
&lt;p&gt;When using a standard I/O request, you will be charged something around 11 cents per 1 million request, and when using provisioned IOPS, you will be charged 11 cents per 1 IOPS-month, this will approximately save $10 a month for I/O requests. Pricing will depends on region, and provisioned storage will cost more for space, but the end cost is cheaper.&lt;/p&gt;
&lt;p&gt;So far, the only way to use this provisioned IOPS is by creating a new instance / launching new EBS volume, I haven't figured any way to switch my EBS volume to use a provisioned IOPS. For more info, see the EBS detail page in AWS (http://aws.amazon.com/ebs/).&lt;/p&gt;</summary><category term="AWS"></category></entry><entry><title>T-shirt New Relic</title><link href="http://kecebongsoft.github.io/2012/09/t-shirt-new-relic.html" rel="alternate"></link><updated>2012-09-28T00:00:00+02:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2012-09-28:2012/09/t-shirt-new-relic.html</id><summary type="html">&lt;p&gt;4 Minggu yang lalu New Relic ada promosi bagi setiap user baru yang ngedeploy, bakal dapet t-shirt "Data Nerd" gratis, syaratnya, harus register via Geekli.st. Karna saya udah punya account New Relic sebelum ini, jadi harus register account terpisah buat ngedapetin t-shirt nya, maruk yah :p. Anyway t-shirtnya udah datang:&lt;/p&gt;
&lt;p&gt;&lt;img src='/images/newrelic1.jpg' /&gt;
&lt;img src='/images/newrelic2.jpg' /&gt;
&lt;img src='/images/newrelic3.jpg' /&gt;
&lt;img src='/images/newrelic4.jpg' /&gt;
&lt;img src='/images/newrelic5.jpg' /&gt;&lt;/p&gt;</summary></entry><entry><title>72Solarized Theme</title><link href="http://kecebongsoft.github.io/2012/09/72solarized-theme.html" rel="alternate"></link><updated>2012-09-20T00:00:00+02:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2012-09-20:2012/09/72solarized-theme.html</id><summary type="html">&lt;p&gt;For the past few hours I've been trying to modify the default &lt;em&gt;notmyidea&lt;/em&gt;
theme that came from pelican to be more look alike my 
&lt;a href='http://kecebongsoft.tumblr.com'&gt;Tumblr blog&lt;/a&gt;. Why? Because
I love solarized, and simplicity.&lt;/p&gt;
&lt;p&gt;Why 72? I am planning to make this blog to use fixed with font with 72 
columns. Which will make it extremelly easy to read, and suits my &lt;em&gt;brief&lt;/em&gt;
blogging style.&lt;/p&gt;
&lt;p&gt;It turned out it wasn't that easy, especially I am a complete idiot in
web design. So this is all that was. I will try to improve as more posts
will be here. But at least it got the simplicity already.&lt;/p&gt;</summary></entry><entry><title>puppet-sentry</title><link href="http://kecebongsoft.github.io/2012/08/puppet-sentry.html" rel="alternate"></link><updated>2012-08-08T00:00:00+02:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2012-08-08:2012/08/puppet-sentry.html</id><summary type="html">&lt;p&gt;When I'm tasked to cast a new installation of sentry with puppet, I was
faced with problem that sentry need to interactively ask a superuser
creation when &lt;em&gt;syncdb&lt;/em&gt; is performed, which came from Django's. Fortunately.
in Django you can have initial predefined data that will be imported
when &lt;em&gt;syncdb&lt;/em&gt; is performed. By having a json formatted file in the root
project path and passing &lt;em&gt;--no-input&lt;/em&gt; in the command, Django will 
import the data and find the superuser information in the file.&lt;/p&gt;
&lt;p&gt;To make it easier for people, I created a puppet module to install 
sentry without having to interactively enter superuser information. 
Check it here: &lt;a href='http://github.com/kecebongsoft/puppet-sentry'&gt;
kecebongsoft/puppet-sentry&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Pemrograman Visual</title><link href="http://kecebongsoft.github.io/2012/08/pemrograman-visual.html" rel="alternate"></link><updated>2012-08-05T00:00:00+02:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2012-08-05:2012/08/pemrograman-visual.html</id><summary type="html">&lt;p&gt;Beberapa bulan lalu saya sering cerita via chat ama temen tentang tugas
kuliahnya di kampus *tiiiit*, beberapa kali dia mention  tentang tugas
mata kuliah Pemrograman Visual, setelah saya intip, cukup kaget karena
materinya tidak sesuai dengan judul mata kuliahnya. Kalau kalian lagi
ambil mata kuliah Pemrograman Visual dan diajarin VB atau Java, selamat,
kalian tersesat.&lt;/p&gt;
&lt;p&gt;Belakangan ini saya mulai terusik lagi dengan judul mata kuliah Pemrograman Visual. 
Sekarang saya pengen bahasa singkat aja (karna kalau diulas semua sumpah panjang 
banget) tentang salahnya dimana dan apa yang membedakan antara 
Pemrograman Visual dan yang bukan.&lt;/p&gt;
&lt;p&gt;Permasalahan utamanya adalah: Mata kuliah dengan judul Pemrograman 
Visual, tapi dengan materi bahasa pemrograman seperti Visual Basic dan
Java, digabungkan dengan software seperti Microsoft Visual Studio,
Eclipse dan NetBeans.&lt;/p&gt;
&lt;h2&gt;Bahasa-bahasa tersebut bukanlah bahasa pemrograman visual&lt;/h2&gt;
&lt;p&gt;Dalam desain bahasa pemrograman, ada satu bagian tentang studi semantik,
yaitu proses penterjemahan sebuah valid statement dari bahasa pemrograman 
menjadi sebuah computational model, ini terdiri dari banyak sekali parameter, 
salah satunya adalah struktur sintatik, dan dimensi. &lt;/p&gt;
&lt;p&gt;Jumlah dimensi inilah yang menentukan bahwa bahasa-bahasa seperti VB dan
teman-temannya adalah bukan bahasa pemrograman visual, melainkan &lt;em&gt;textual
programming language&lt;/em&gt;. Apa saja dimensi textual programming language?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dimensi horizontal, adalah semantic sebagai legal linear string, yang
  membentuk sebuah statement menjadi computational model&lt;/li&gt;
&lt;li&gt;Dimensi vertikal, adalah line continuation, baris ke 2 di kode
  biasanya diartikan sebagai baris selanjutnya setelah baris pertama, atau
  jalankan baris kedua setelah baris pertama&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dimensi vertikal meskipun salah satu bagian utama, tapi bukan bagian dari
semantik melainkan spatial relationship, atau flow/blok selanjutnya setelah
blok pertama (baris pertama).&lt;/p&gt;
&lt;h2&gt;Apa itu Pemrograman Visual?&lt;/h2&gt;
&lt;p&gt;VPL adalah bahasa pemrograman yang menggunakan banyak dimensi yang
visually expresive sebagai semantiknya. Expresi Visual bukan berarti
tombol-tombol di Microsoft Visual Basic untuk bikin textbox atau picture
box, tapi simbol-simbol yang menjelaskan tentang alur program, hubungan
antar entity, dan impact.&lt;/p&gt;
&lt;p&gt;Didalam VPL, saya bisa secara visual mendeklarasikan A dan B, lalu
menggabungkan keduanya dengan sebuah operator matematika, lalu melihat dampaknya
secara langsung, semua dalam bentuk diagram/simbol.&lt;/p&gt;
&lt;p&gt;Flowchart, UML Diagram, adalah contoh dari model sebuah VPL, dimensinya
adalah spatial relationship lewat penunjuk panah, atau time-based impact
seperti perubahan data sebelum dan sesudah.&lt;/p&gt;
&lt;h2&gt;Tapi kan, saya pakai Microsoft Visual Basic/Netbeans, bisa drag &amp;amp; drop, itu visual!&lt;/h2&gt;
&lt;p&gt;Software yang dipakai untuk 'drag &amp;amp; drop' itu adalah development environment,
nggak boleh disamakan dengan bahasa pemrogramannya, development environment
adalah software yang ngasih kita shortcut untuk melakukan task-task yang
umum seperti manage project, bikin GUI (Form/Tombol/Textbox/dll), bikin
build, dll, tapi dibelakang layar mereka ngehasilin kode yang kurang lebih
sama dengan kalau kita ngetik di teks editor biasa. Tampilan GUI yang dibuat
di software ini juga di simpan ke file teks manifest biasa.&lt;/p&gt;
&lt;p&gt;Ini yang namanya VPE (Visual Programming Environment), bahasa pemrograman
seperti Visual Basic dan Java punya Microsoft Visual Studio dan Netbeans
sebagai VPEnya, namun nggak diwajibkan harus pakai karena sifat textual
programming languagenya yang dengan semantik terbatas bisa dimanage
sebagai teks biasa dan bisa di compile terpisah.&lt;/p&gt;
&lt;p&gt;Sedangkan VPE untuk untuk Visual Programming Language (VPL) lebih bersifat
sebagai sebuah keharusan karna VPL sendiri sangat ekspresif dan sulit
untuk bekerja dengan VPL (dengan simbol dan sebagainya) tanpa menggunakan
software yang mensupport untuk membuat visually expressive syntax.&lt;/p&gt;
&lt;h2&gt;Tadi katanya Textual Programming itu berbentuk teks dan VPL berbentuk simbol, Jadi maksudnya VPL itu nggak boleh ada teks sama sekali?&lt;/h2&gt;
&lt;p&gt;Ini yang paling sering disalah artikan, TP dan VP itu yang membedakan adalah
semantik, bukan tentang teks atau tidak, VPL juga punya teks di beberapa
bagian sampai batas tertentu.&lt;/p&gt;
&lt;p&gt;Lalu kenapa ada VPL? Salah satu main goalnya adalah untuk nge-improve
language design yang sekarang konvensional seperti textual programming
language, masalah dengan textual programming language adalah sifatnya
yang restriktif sekali, nggak banyak ekspresi yang bisa kita lakukan
karena dibatasi oleh struktur sintaks &amp;amp; parse tree bahasa pemrograman
yang bersangkutan, sementara VPL punya lebih sedikit aturan, sehingga
result yang dihasilkan bisa bermacam-macam karena objek dan spatial
relationshipnya yang nggak terlalu restriktif.&lt;/p&gt;
&lt;h2&gt;Lalu apa efek negatifnya belajar Pemrograman Visual dengan materi yang salah?&lt;/h2&gt;
&lt;p&gt;Banyak sekali, ibaratkan dengan ikut les bahasa Korea tapi yang diajarkan
adalah bahasa Jepang. VPL kebanyakan bukanlah general-purpose-language,
sedangkan yang diajarkan (contoh:Java), adalah general-purpose-language,
VPL lebih domain spesifik seperti untuk edukasi, hardware, dan multimedia
seperti audio analyzer atau animation. Sedangkan bahasa seperti Java
punya fungsi/domain yang luas sekali. Ditambah lagi biasanya materi yang
diajarkan adalah tentang "Visual" yang salah, yaitu gimana cara membuat
program berbasis GUI, gimana caranya supaya waktu tombol A ditekan, keluar
gambar kucing lagi pakai topi semangka, dll. Ini bukan visual programming,
mempelajari membuat program berbasis GUI nggak akan ngajarin kita tentang
visual programming, dan bisa jadi tersesat lebih jauh, contoh: mengesampingkan
materi yang lebih penting ketimbang belajar GUI, seperti programming language
paradigm.&lt;/p&gt;
&lt;p&gt;Post ini cuma mau menekankan perbedaan mendasar dari textual-programming
language, dan VPL. Nggak ada contoh/screenshot karena pengennya dibahas
singkat aja tentang karakteristik utama masing2 jenis programming languagenya.&lt;/p&gt;
&lt;p&gt;Untuk paper yang ngebahas tentang VPL cukup lengkap, ada disini:
http://www.cs.auckland.ac.nz/courses/compsci732s1c/archive/2005/lectures/WhatIsVP.pdf&lt;/p&gt;</summary></entry><entry><title>Samarinda ada di posisi 6 worldwide-Julython 2012</title><link href="http://kecebongsoft.github.io/2012/07/samarinda-ada-di-posisi-6-worldwide-julython-2012.html" rel="alternate"></link><updated>2012-07-30T00:00:00+02:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2012-07-30:2012/07/samarinda-ada-di-posisi-6-worldwide-julython-2012.html</id><summary type="html">&lt;p&gt;Yup, saya ikutan Julython 2012, Julython adalah event sebulan penuh tentang
proyek open source berbasis python yang kita tulis sendiri, yang bikin
seneng adalah "Samarinda, Indonesia" ada di ranking ke 6 di page locations 
dari seluruh dunia (http://julython.org/location/), dan saya sekarang ada di 
posisi pertama di people page (http://julython.org/people/) :D,  Julython 2012 
akan berakhir beberapa hari lagi dan semoga posisi ini nggak turun :D.&lt;/p&gt;</summary></entry><entry><title>Extracting a subset of tar archive to a specific directory</title><link href="http://kecebongsoft.github.io/2012/07/extracting-a-subset-of-tar-archive-to-a-specific-directory.html" rel="alternate"></link><updated>2012-07-20T00:00:00+02:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2012-07-20:2012/07/extracting-a-subset-of-tar-archive-to-a-specific-directory.html</id><summary type="html">&lt;p&gt;I came across a task where I need to automatically download solr
package and extract the files in example/ directory to a specific 
folder so here's how it's done:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir -p /dest/path/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; tar -xf file.tar &lt;span class="nb"&gt;source&lt;/span&gt;/path --strip&lt;span class="o"&gt;=&lt;/span&gt;n
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will create a directory and extract a folder &lt;em&gt;source/path&lt;/em&gt; in the
file.tar. Notice that there's a &lt;em&gt;--strip=n--&lt;/em&gt;, this will let you 
skip the directory structure up to certain level from the root. So if I
want to extract the whole content of &lt;em&gt;source/path&lt;/em&gt; to &lt;em&gt;dest/path&lt;/em&gt; 
without recreating &lt;em&gt;source/path&lt;/em&gt; folder inside &lt;em&gt;dest/path&lt;/em&gt;, I can put
&lt;em&gt;--strip=2&lt;/em&gt; to the argument to skip directory &lt;em&gt;source/&lt;/em&gt; and 
&lt;em&gt;source/path&lt;/em&gt;&lt;/p&gt;</summary></entry><entry><title>.dotfiles</title><link href="http://kecebongsoft.github.io/2012/05/dotfiles.html" rel="alternate"></link><updated>2012-05-10T00:00:00+02:00</updated><author><name>Dedi Purwanto</name></author><id>tag:kecebongsoft.github.io,2012-05-10:2012/05/dotfiles.html</id><summary type="html">&lt;p&gt;I once maintain my own vimfiles repository, but vim plugins are now easier to manage using vundle and I realize it's time to only rely on my .vimrc without anything else (not .vim, not plugins, etc). So I created a &lt;a href="https://github.com/kecebongsoft/dotfiles"&gt;new repository&lt;/a&gt; and put all my dotfiles there, add some submodules and setup script to make it easy, oh, and I removed my vimfiles as well.&lt;/p&gt;</summary></entry></feed>